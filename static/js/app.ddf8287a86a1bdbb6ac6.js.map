{"version":3,"sources":["webpack:///./src/App.vue?5975","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/jackfish/declarations.js","webpack:///src/components/Promotion.vue","webpack:///./src/components/Promotion.vue?5b82","webpack:///./src/components/Promotion.vue","webpack:///./src/jackfish/helpers.js","webpack:///./src/jackfish/evaluation.js","webpack:///./src/jackfish/tp.js","webpack:///./src/jackfish/Position.js","webpack:///./src/jackfish/AI.js","webpack:///./src/jackfish/index.js","webpack:///src/components/Home.vue","webpack:///./src/components/Home.vue?a116","webpack:///./src/components/Home.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","ssrContext","WHITE","BLACK","PIECES","imgs","white","Q","N","R","B","black","q","n","r","b","key","Promotion__key","Promotion","data","props","computed","file","pos","urls","color","width","board","offsetWidth","offset","getBoundingClientRect","x","components_Promotion","_vm","staticClass","style","left","_l","img","piece","src","on","click","$event","$emit","src_components_Promotion","Promotion_normalizeComponent","isWhite","charAt","toUpperCase","isColor","sameColor","p1","p2","next","c","colDif","Math","abs","rank","p","floor","parse","s","length","NaN","toLowerCase","charCodeAt","a","h","squareToString","String","fromCharCode","toString","concat","equalBoards","b1","b2","i","PIECE","P","K","pstRaw","pst","bKey","forEach","e","push","evaluation_key","_loop","evaluate","value","Random","random","engines","mt19937","seed","rand","integer","pow","randoms","hashes","turn","wc","bc","epFile","kp","kps","Lru","maxSize","classCallCheck_default","map","map_default","createClass_default","size","hash","low","high","arr","get","undefined","delete","set","val","keys","clear","tp_Cwf","Cwf","cache","currentSize","A1","H8","W","steps","Position_key","S","Position_i","Position","boardOrFen","arguments","ep","halfMoveClock","score","myHash","boardHash","fen","subs","trim","split","num","parseInt","is_integer_default","j","Error","used","applyHashes","hashParam","tp_hash","hashBoard","rights","step","t","tp","includes","slice","hashNullMove","move","promo","o","op","helper","newHashes","hashMove","_this","newHash","newBoardHash","applyHash","applyBoardHash","moves","genMoves","el","done","nextPos","nextMoves","nextEl","mySteps","pawnSteps","pawn","kingSquare","indexOf","bq","rq","BQ","RQ","spaces","MAX_SCORE","SEARCH_MARGIN","L","AI_E","H","AI_tp","boardTable","count","add","pull","Killer","origins","callBack","tpHits","searched","timeLimit","gotMove","timeout","Date","now","forMoves","pv","callback","inStalemate","inCheck","getPieces","pieces","new","takenPiece","newPieces","assign_default","endgame","insufficientMaterial","alphaBeta","depth","alpha","beta","root","stalemate","entry","fail","handleMove","nextScore","nullMove","mtdf","guess","bound","lower","upper","f","AI","_ref","asyncToGenerator_default","regenerator_default","mark","_callee","history","deepestEntry","time","logs","betweenDepths","wrap","_context","prev","jackfish_Position","console","log","abrupt","stop","_x2","_x3","apply","defaultConfig","startPos","searchTime","Engine","options","config","aiInfo","configure","setPos","fullMove","isNaN","position","valid","last","pop","inCheckMate","fiftyMoves","inThreefoldRepetition","inStaleMate","insuffMaterial","game","generator","winner","Home_game","jackfish","dummyGame","Home","components","promotion","invalidFen","invalidStartPos","watch","game.position.board","game.position.turn","setTimeout","aiMove","game.aiInfo","handler","deep","mounted","_this2","promise_default","resolve","chessboard_default","draggable","onDrop","target","onDragStart","methods","handlePromotion","cancel","undoMove","restart","setStartPos","resetStartPos","setTime","components_Home","_v","visibility","type","directives","rawName","expression","domProps","input","composing","$set","_e","_m","_s","$refs","ref","href","role","src_components_Home","Home_normalizeComponent","vue_esm","use","vue_router_esm","router","routes","path","component","window","$","jquery","jquery_default","productionTip","App","template"],"mappings":"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","file":"static/js/app.ddf8287a86a1bdbb6ac6.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0e232033\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0e232033\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0e232033\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","/**\n * Type and constants declarations.\n * @flow\n */\n\nexport const WHITE = 0;\nexport const BLACK = 1;\nexport const PIECES = [\n  'P', 'N', 'B', 'R', 'Q', 'K',\n  'p', 'n', 'b', 'r', 'q', 'k'\n];\n\nexport type Color = 0 | 1;\n// ' ' means no piece\nexport type Piece = 'P' | 'N' | 'B' | 'R' | 'Q' | 'K' |\n                    'p' | 'n' | 'b' | 'r' | 'q' | 'k';\n// [white, black], piece objects may be any order\n// must have no empty elements\nexport type Board = Array<Piece | null>;\n\nexport type Move = [number, number]; // [from, to]\nexport type CR = [boolean, boolean]; // castling rights [queenside, kingside]\n\nexport type Hash = [number, number];\nexport type History = Array<{fen: string, move: Move}>;\n\n// used for testing\nexport type PieceObj = {| pos: number, piece: Piece |};\nexport type Pieces = Array<PieceObj>;\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/declarations.js","<template>\n  <div class=\"promotion\" :style=\"{\n    left: offset + 'px',\n    width: width + 'px',\n  }\">\n    <img v-for=\"(img, piece) in urls\" :key=\"img\"\n      :src=\"img\" @click=\"$emit('done', piece)\"\n      :style=\"{ width: width + 'px', }\"\n    >\n  </div>\n</template>\n\n<script>\nimport { WHITE } from '@/jackfish/declarations';\n\n// piece img urls\nconst imgs = {\n  white: {\n    Q: 'wQ',\n    N: 'wN',\n    R: 'wR',\n    B: 'wB',\n  },\n  black: {\n    q: 'bQ',\n    n: 'bN',\n    r: 'bR',\n    b: 'bB',\n  }\n};\n\nfor (const key in imgs.white) {\n  imgs.white[key] = '/img/chesspieces/wikipedia/' + imgs.white[key] + '.png';\n}\nfor (const key in imgs.black) {\n  imgs.black[key] = '/img/chesspieces/wikipedia/' + imgs.black[key] + '.png';\n}\n\nexport default {\n  name: 'Promotion',\n  data() {\n    return {\n    };\n  },\n  props: ['pos', 'color', 'board'],\n  computed: {\n    file() {\n      return this.pos % 8; // 0 - 7\n    },\n    // piece img urls\n    urls() {\n      if (this.color === WHITE) return imgs.white;\n      else return imgs.black;\n    },\n    width() {\n      return this.board.offsetWidth / 8;\n    },\n    offset() {\n      return this.board.getBoundingClientRect().x +\n        (this.file - 1) * this.width;\n    }\n  },\n};\n</script>\n\n<style scoped>\n.promotion {\n  position: absolute;\n  background-color: white;\n  box-shadow: 1px 1px 5px;\n  z-index: 100;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Promotion.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"promotion\",style:({\n  left: _vm.offset + 'px',\n  width: _vm.width + 'px',\n})},_vm._l((_vm.urls),function(img,piece){return _c('img',{key:img,style:({ width: _vm.width + 'px', }),attrs:{\"src\":img},on:{\"click\":function($event){_vm.$emit('done', piece)}}})}))}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6968ab57\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Promotion.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6968ab57\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Promotion.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Promotion.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Promotion.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6968ab57\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Promotion.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6968ab57\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Promotion.vue\n// module id = null\n// module chunks = ","/**\n * Helper functions.\n * @flow\n */\n\nimport { WHITE, BLACK } from './declarations';\nimport type { Piece, Color, Board } from './declarations';\n\nexport function isWhite(piece: Piece): boolean {\n  return piece.charAt(0) === piece.charAt(0).toUpperCase();\n}\n\nexport function isColor(piece: Piece, color: Color): boolean {\n  return color === WHITE ? isWhite(piece) : !isWhite(piece);\n}\n\nexport function sameColor(p1: Piece, p2: Piece): boolean {\n  return isWhite(p1) === isWhite(p2);\n}\n\n// Returns the other color.\nexport function next(c: Color): Color {\n  return c === WHITE ? BLACK : WHITE;\n}\n\nexport function rowDif(p1: number, p2: number): number {\n  return Math.abs(Math.floor(p1 / 8) - Math.floor(p2 / 8));\n}\n\nexport function colDif(p1: number, p2: number): number {\n  return Math.abs(p1 % 8 - p2 % 8);\n}\n\nexport function rank(p: number): number {\n  return 8 - Math.floor(p / 8)\n}\n\n/**\n * Parses a position on form 'f5'. If it's already a number, returns the\n * number.\n * @return The corresponding number, or NaN if the string was invalid.\n */\nexport function parse(s: string | number) {\n  if (typeof s === 'number') return s;\n  if (s.length !== 2) return NaN;\n\n  s = s.toLowerCase();\n  const file = s.charCodeAt(0); // char representing file\n  const rank = s.charCodeAt(1); // char representing rank\n  const a = 'a'.charCodeAt(0);\n  const h = 'h'.charCodeAt(0);\n  if (!(file >= a && file <= h && rank >= 49 && rank <= 56)) {\n    return NaN;\n  }\n\n  // 97 is ascii for 'a' and 49 for '1'\n  return file - 97 + 56 - (rank - 49) * 8;\n}\n\n/**\n * Parses a position on number form to from 'f5'.\n * Assumes pos >= 0 && pos <= 63.\n * @return The string, or null if the number was invalid.\n */\nexport function squareToString(pos: number): string {\n  const file: string = String.fromCharCode(pos % 8 + 97);\n  const r: string = rank(pos).toString();\n  return file.concat(r);\n}\n\nexport function equalBoards (b1: Board, b2: Board) {\n  for (let i = 0; i < 64; i++) {\n    if (b1[i] !== b2[i]) return false;\n  }\n  return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/helpers.js","/**\n * Evaluation of a position.\n * @flow\n */\n\nimport { isWhite } from './helpers';\n\nimport type { Board, Piece } from './declarations';\n\n// Piece values.\n// King value is set to a very high value to easily detect when king is taken,\n// and thereby detecting checkmate, and to always avoid it if possible.\nexport const PIECE = { P: 100, N: 320, B: 330, R: 500, Q: 900, K: 30000 };\n\n// Piece-square tables.\n// Index is index of position on the board for white, and for the board\n// flipped for black.\n// Taken from https://chessprogramming.wikispaces.com/Simplified%20evaluation%20function\n\n/* eslint-disable */\nexport const pstRaw = {\n  // pawn\n  P: [\n     0,  0,  0,  0,  0,  0,  0,  0,\n    50, 50, 50, 50, 50, 50, 50, 50,\n    10, 10, 20, 30, 30, 20, 10, 10,\n     5,  5, 10, 25, 25, 10,  5,  5,\n     0,  0,  0, 20, 20,  0,  0,  0,\n     5, -5,-10,  0,  0,-10, -5,  5,\n     5, 10, 10,-20,-20, 10, 10,  5,\n     0,  0,  0,  0,  0,  0,  0,  0\n  ],\n  // knight\n  N: [\n    -50,-40,-30,-30,-30,-30,-40,-50,\n    -40,-20,  0,  0,  0,  0,-20,-40,\n    -30,  0, 10, 15, 15, 10,  0,-30,\n    -30,  5, 15, 20, 20, 15,  5,-30,\n    -30,  0, 15, 20, 20, 15,  0,-30,\n    -30,  5, 10, 15, 15, 10,  5,-30,\n    -40,-20,  0,  5,  5,  0,-20,-40,\n    -50,-40,-30,-30,-30,-30,-40,-50,\n  ],\n  // bishop\n  B: [\n    -20,-10,-10,-10,-10,-10,-10,-20,\n    -10,  0,  0,  0,  0,  0,  0,-10,\n    -10,  0,  5, 10, 10,  5,  0,-10,\n    -10,  5,  5, 10, 10,  5,  5,-10,\n    -10,  0, 10, 10, 10, 10,  0,-10,\n    -10, 10, 10, 10, 10, 10, 10,-10,\n    -10,  5,  0,  0,  0,  0,  5,-10,\n    -20,-10,-10,-10,-10,-10,-10,-20,\n  ],\n  // rook\n  R: [\n     0,  0,  0,  0,  0,  0,  0,  0,\n     5, 10, 10, 10, 10, 10, 10,  5,\n    -5,  0,  0,  0,  0,  0,  0, -5,\n    -5,  0,  0,  0,  0,  0,  0, -5,\n    -5,  0,  0,  0,  0,  0,  0, -5,\n    -5,  0,  0,  0,  0,  0,  0, -5,\n    -5,  0,  0,  0,  0,  0,  0, -5,\n     0,  0,  0,  5,  5,  0,  0,  0,\n  ],\n  // queen\n  Q: [\n    -20,-10,-10, -5, -5,-10,-10,-20,\n    -10,  0,  0,  0,  0,  0,  0,-10,\n    -10,  0,  5,  5,  5,  5,  0,-10,\n     -5,  0,  5,  5,  5,  5,  0, -5,\n      0,  0,  5,  5,  5,  5,  0, -5,\n    -10,  5,  5,  5,  5,  5,  0,-10,\n    -10,  0,  5,  0,  0,  0,  0,-10,\n    -20,-10,-10, -5, -5,-10,-10,-20,\n  ],\n  // king\n  K: [\n    -30,-40,-40,-50,-50,-40,-40,-30,\n    -30,-40,-40,-50,-50,-40,-40,-30,\n    -30,-40,-40,-50,-50,-40,-40,-30,\n    -30,-40,-40,-50,-50,-40,-40,-30,\n    -20,-30,-30,-40,-40,-30,-30,-20,\n    -10,-20,-20,-20,-20,-20,-20,-10,\n     20, 20,  0,  0,  0,  0, 20, 20,\n     20, 30, 10,  0,  0, 10, 30, 20\n  ]\n};\n/* eslint-enable */\n\n// Join psts with piece values into a final pst, and add mirrored tables\n// for black pieces\ntype Pst = {\n  [piece: Piece]: Array<number>\n};\n\nexport const pst: Pst = {};\nfor (const key in pstRaw) {\n  const bKey: Piece = (key.toLowerCase(): any); // corresponding black piece key\n  pst[(key: any)] = [];\n  pst[bKey] = [];\n  pstRaw[key].forEach((e, i) => {\n    pst[(key: any)].push(e + PIECE[key])\n    pst[bKey][56 - i + 2 * (i % 8)] = e + PIECE[key];\n  });\n}\n\n/**\n * Gives the board value for white (negate for black's).\n */\nexport default function evaluate(board: Board): number {\n  let value = 0;\n  for (let i = 0; i < 64; i++) {\n    if (board[i]) {\n      const piece: Piece = board[i];\n      if (isWhite(piece)) value += pst[piece][i];\n      else value -= pst[piece][i];\n    }\n  }\n  return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/evaluation.js","/**\n * Transposition table stuff\n * @flow\n */\n\nimport Position from './Position';\nimport { PIECES, WHITE } from './declarations';\nimport type { Piece } from './declarations';\n\nconst Random = require('random-js');\n// 27102 is just a random number\nconst random = new Random(Random.engines.mt19937().seed(27102));\n\n/**\n * Zobrist hashing for positions. Hashed in two parts, low and high.\n *\n * Low is used as key in Map and high is stored at the key\n * together with a value for that position. This is because of\n * javascript's number type that can only store integers up to 52 signed\n * bits and the fact that bitwise operators in javascript only operates on\n * 32 bit signed integers.\n */\n\n// get 2 random 32 bit integers\nexport function rand() {\n  return random.integer(-Math.pow(2, 31), Math.pow(2, 31) - 1);\n}\n\n// Makes a hash tuple with low and high\nexport const randoms = () => [rand(), rand()];\n\n// initialize hashes array\ntype Hashes = {\n  [index: Piece | 'wc' | 'bc' | 'turn' | 'epFile' | 'kp']: any\n}\nconst hashes: Hashes = {};\nPIECES.forEach(p => {\n  hashes[p] = [];\n  for (let i = 0; i < 64; i++) {\n    hashes[p].push(randoms()); // [low, high]\n  }\n\n  hashes.turn = randoms(); // apply when white's turn\n\n  hashes.wc = [randoms(), randoms()]; // [queenside, kingside]\n  hashes.bc = [randoms(), randoms()];\n\n  hashes.epFile = [];\n  for (let i = 0; i < 8; i++) {\n    hashes.epFile.push(randoms()); // [A, B, C...]\n  }\n\n  hashes.kp = [];\n  const kps = [3, 5, 59, 61];\n  for (let i = 0; i < kps.length; i++) {\n    hashes.kp[kps[i]] = randoms();\n  }\n});\n\nexport { hashes };\n\n// Hash the position, returning hash as [low, high]\nexport function hash(pos: Position): [number, number] {\n  const myHash = [0, 0]; // low, high\n\n  // apply [low, high] to low and high\n  const applyHashes = (hashParam: [number, number]) => {\n    myHash[0] ^= hashParam[0];\n    myHash[1] ^= hashParam[1];\n  }\n\n  if (pos.turn === WHITE) applyHashes(hashes.turn);\n  for (let i = 0; i < 64; i++) {\n    const p = pos.board[i];\n    if (p) applyHashes(hashes[p][i]);\n  }\n  if (pos.wc[0]) applyHashes(hashes.wc[0]);\n  if (pos.wc[1]) applyHashes(hashes.wc[1]);\n  if (pos.bc[0]) applyHashes(hashes.bc[0]);\n  if (pos.bc[1]) applyHashes(hashes.bc[1]);\n  if (pos.ep !== -1) applyHashes(hashes.epFile[pos.ep % 8]);\n  if (pos.kp !== -1) applyHashes(hashes.kp[pos.kp]);\n\n  return myHash;\n}\n\n/** Transposition table */\n\n// LRU cache, first in first out, size > 0\nexport class Lru<Entry = any> {\n  map: Map<number, Array<Entry>> = new Map();\n  // max number of keys in map (not max number of entries since there can be\n  // many entries in an array at one key)\n  maxSize: number;\n\n  constructor(maxSize: number) {\n    this.maxSize = maxSize;\n  }\n\n  size() {\n    return this.map.size;\n  }\n\n  /** Returns entry at hash, or undefined if there is none. */\n  get(hash: [number, number]): ?Entry {\n    const low = hash[0];\n    const high = hash[1];\n    const arr = this.map.get(low);\n\n    if (arr !== undefined) {\n      // set to last recently used\n      this.map.delete(low);\n      this.map.set(low, arr);\n\n      return arr[high];\n    }\n    return undefined;\n  }\n\n  /** Add an entry to the cache, returns the added entry. */\n  add(hash: [number, number], val: Entry): Entry {\n    const low = hash[0];\n    const high = hash[1];\n    const arr = this.map.get(low);\n\n    if (arr !== undefined) {\n      arr[high] = val;\n      this.map.delete(low);\n      this.map.set(low, arr);\n    } else {\n      const arr = [];\n      arr[high] = val;\n      this.map.set(low, arr);\n    }\n\n    if (this.map.size > this.maxSize) {\n      // $FlowFixMe\n      this.map.delete(this.map.keys().next().value);\n    }\n\n    return val;\n  }\n\n  clear() {\n    this.map.clear();\n  }\n\n  setSize(maxSize: number) {\n    this.maxSize = maxSize;\n  }\n}\n\n// A simpler clear-when-full cache,\n// has a max size but just resets when it's reached\nexport class Cwf<Entry = any> {\n  cache: Array<Array<Entry>> = [];\n  maxSize: number;\n  currentSize: number = 0;\n\n  constructor(size: number) {\n    this.maxSize = size;\n  }\n\n  size(): number {\n    return this.currentSize;\n  }\n  setSize(size: number): void {\n    this.maxSize = size;\n  }\n\n  /** Returns entry at hash or undefined if there is none. */\n  get(hash: [number, number]): ?Entry {\n    const low = hash[0];\n    const high = hash[1];\n\n    if (this.cache[low] !== undefined) return this.cache[low][high];\n    else return undefined;\n  }\n\n  /** Add an entry to the cache. Assumes it does not already exist */\n  add(hash: [number, number], val: Entry): Entry {\n    const low = hash[0];\n    const high = hash[1];\n\n    // if passed size limit, clear cache and start over\n    // (might clear one too early)\n    if (this.currentSize === this.maxSize) {\n      this.cache = [];\n      this.currentSize = 0;\n    }\n\n    if (this.cache[low] !== undefined) {\n      if (this.cache[low][high] === undefined) this.currentSize++;\n      this.cache[low][high] = val;\n    } else {\n      this.cache[low] = [];\n      this.cache[low][high] = val;\n      this.currentSize++;\n    }\n    return val;\n  }\n  clear() {\n    this.cache = [];\n    this.currentSize = 0;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/tp.js","/**\n * Position module.\n * @flow\n */\n\nimport { isColor, sameColor, next, colDif, rowDif,\n  parse, squareToString } from './helpers';\nimport evaluate, { pst } from './evaluation';\nimport { WHITE, BLACK } from './declarations';\nimport { hash, hashes } from './tp';\n\nimport type { Color, Board, Piece, Move, CR, Hash } from './declarations';\n\n// some squares\nexport const A1 = 56;\nexport const H1 = 63;\nexport const A8 = 0;\nexport const H8 = 7;\n\n// directions\nconst N = -8; // north\nconst E = 1; // east\nconst S = 8; // south\nconst W = -1; // west\n\n/* eslint-disable */\n// possible steps for different pieces\nconst steps = {};\nsteps.P = [N, 2*N, N+W, N+E]; // p[0] = white, p[1] = black\nsteps.N = [2*N+W, 2*N+E, 2*W+N, 2*W+S, 2*S+E, 2*S+W, 2*E+N, 2*E+S];\nsteps.B = [N+W, N+E, S+W, S+E];\nsteps.R = [N, E, S, W];\nsteps.Q = [N, N+E, E, S+E, S, S+W, W, N+W];\nsteps.K = [N, N+E, E, S+E, S, S+W, W, N+W];\n\n// add for black pieces\nfor (const key in steps) {\n  steps[key.toLowerCase()] = steps[key];\n}\n// black pawns can only move opposite direction\nsteps.p = [];\nfor (let i = 0; i < steps.P.length; i++) steps.p.push(-steps.P[i]);\n\n/* eslint-enable */\n\n/**\n * A complete position of a chess game.\n */\nexport default class Position {\n  board: Board;\n  turn: Color;\n  wc: CR;\n  bc: CR;\n  ep: number;\n  kp: number;\n  halfMoveClock: number;\n\n  score: number;\n  hash: Hash;\n  boardHash: Hash;\n\n  constructor(\n    boardOrFen: Board | string,\n    turn: Color = WHITE,\n    wc: CR = [true, true], // white castling rights\n    bc: CR = [true, true], // black...\n    ep: number = -1, // -1 if there is none\n    kp: number = -1, // -1 if there is none\n    halfMoveClock: number = 0, // defaults to 0\n\n    // Score for color to move. If none is provided, calculates it from scratch.\n    score?: number,\n    myHash?: Hash,\n    boardHash?: Hash,\n  ) {\n    // if we get a fen string: assumes it's a valid fen string\n    if (typeof boardOrFen === 'string') {\n      const fen = boardOrFen;\n      this.board = [];\n      this.wc = [false, false];\n      this.bc = [false, false];\n      this.ep = -1;\n      this.kp = -1;\n\n      const subs = fen.trim().split(/ +/); // get substrings\n\n      let pos = 0; // current board position (square)\n      let i = 0; // index of string\n      // The board array is indexed the same way as FEN notation.\n      while (i < subs[0].length) {\n        let c = subs[0].charAt(i); // currently parsed char\n        const num = parseInt(c);\n        if (Number.isInteger(num)) {\n          for (let j = 0; j < num; j++) {\n            this.board[pos + j] = null;\n          }\n          pos += num;\n        } else {\n          // Cast to piece when we know it is one.\n          c = ((c: any): Piece)\n          this.board[pos] = c;\n          pos++;\n        }\n        i++;\n        if (pos >= 64) break; // should not be able to be bigger than 64\n        else if (pos % 8 === 0) {\n          i++;\n        }\n      }\n\n      switch (subs[1]) {\n        case 'w': this.turn = WHITE; break;\n        case 'b': this.turn = BLACK; break;\n        default: throw new Error('Invalid fen string');\n      }\n\n      if (subs[2] !== '-') {\n        const used = [];\n        for (let i = 0; i < subs[2].length; i++) {\n          const c = subs[2].charAt(i);\n          switch (c) {\n            case 'Q': this.wc[0] = true; break;\n            case 'K': this.wc[1] = true; break;\n            case 'q': this.bc[1] = true; break;\n            case 'k': this.bc[0] = true; break;\n            default: throw new Error('Invalid fen string');\n          }\n          used.push(c);\n        }\n      }\n\n      if (subs[3] !== '-') this.ep = parse(subs[3]);\n\n      this.halfMoveClock = parseInt(subs[4]);\n    } else {\n      // else just copy all the parameters to fields.\n      this.board = boardOrFen;\n      this.turn = turn;\n      this.wc = wc;\n      this.bc = bc;\n      this.ep = ep;\n      this.kp = kp;\n\n      if (halfMoveClock !== undefined) this.halfMoveClock = halfMoveClock;\n      else this.halfMoveClock = 0;\n    }\n\n    if (score !== undefined) this.score = score;\n    else {\n      this.score = this.turn === WHITE\n        ? evaluate(this.board) : -evaluate(this.board);\n    }\n\n    if (myHash !== undefined) this.hash = myHash;\n    else this.hash = hash((this: any));\n    if (boardHash !== undefined) this.boardHash = boardHash;\n    else this.boardHash = this.hashBoard();\n  }\n\n  /**\n   * Returns possible moves for color, including moves that result in king-take\n   * and castles invalid because of threatened squares or check. For pawn\n   * promotions, it will only generate one move without the promotion piece.\n   * You must later add the promotion piece for the move to be valid.\n   * @param [color=this.turn] The color to look for moves for.\n   */\n  *genMoves(color?: Color = this.turn): Generator<Move, void, void> {\n    for (let i = 0; i < this.board.length; i++) {\n      const piece = this.board[i];\n      if (piece === null || !isColor(piece, color)) continue;\n\n      // check for castling\n      if (piece.toUpperCase() === 'K') {\n        const rights = color === WHITE ? this.wc : this.bc;\n        if (rights[0] && this.board[i - 1] === null &&\n          this.board[i - 2] === null) yield ([i, i - 2]: Move);\n        if (rights[1] && this.board[i + 1] === null &&\n          this.board[i + 2] === null) yield ([i, i + 2]: Move);\n      }\n\n      for (let j = 0; j < steps[piece].length; j++) {\n        const step = steps[piece][j];\n        // if step is two steps, it must be a pawn\n        if ((step === 2 * N && i < A1 - 8) ||\n          (step === 2 * S && i > H8 + 8)) continue;\n\n        let t = i + step; // target square\n\n        // keep within bounds of board\n        while (t >= 0 && t <= 63 && colDif(t, t - step) < 6) {\n          const tp = this.board[t]; // target piece (or null)\n\n          // pawns get special treatment\n          if (piece.toUpperCase() === 'P') {\n            if (colDif(i, t) === 0 && tp !== null) break;\n            if (rowDif(i, t) === 2 && this.board[i + step / 2] !== null) break;\n            if (colDif(i, t) === 1 && t !== this.ep &&\n              (tp === null || sameColor(tp, piece))) break;\n          } else if (tp !== null) {\n            if (!sameColor(tp, piece)) {\n              yield ([i, t]: Move);\n            }\n            break;\n          }\n\n          yield ([i, t]: Move);\n          if ('KkNnPp'.includes(piece)) break;\n          t += step;\n        }\n      }\n    }\n  }\n\n  /**\n   * Makes a nullmove, i.e. switches turn, resets en passant and negates score.\n   */\n  nullMove(): Position {\n    // copying board with slice, works because it's shallow\n    return new Position(this.board.slice(), next(this.turn), this.wc, this.bc,\n      -1, -1, this.halfMoveClock + 1,\n      -this.score, this.hashNullMove(), this.boardHash);\n  }\n\n  /**\n   * Makes the move and returns the new position. Does not alter this\n   * position. Assumes that the move is valid.\n   * @param move  The move\n   * @param promo If there is a promotion of a pawn, this is the piece to\n   *              replace it with. Default to Queen.\n   * @param score Optional to pass score to avoid calculating it twice\n   * @return      The new position.\n   */\n  move(move: Move, promo?: Piece, score?: number): Position {\n    const o = move[0]; // origin square\n    const t = move[1]; // target square\n    // it's assumed that there is a piece at the origin position,\n    // toUpperCase() makes it generic because color doesn't matter\n    const op: Piece = (this.board[o]: any);\n    if (!promo) {\n      if (this.turn === WHITE) promo = 'Q'; // default promotion piece\n      else promo = 'q';\n    }\n\n    const board = this.board.slice(); // copy board\n    let wc: CR = (this.wc.slice(): any); // copy castling rights\n    let bc: CR = (this.bc.slice(): any);\n    let ep = -1; // default\n    let kp = -1;\n    // negate score so it's for the other side\n    if (score === undefined) score = -(this.score + this.value(move, promo));\n\n    let halfMoveClock;\n    // will also be reset at pawn take\n    if (board[t]) halfMoveClock = 0;\n    else halfMoveClock = this.halfMoveClock + 1;\n\n    // make the move\n    board[t] = board[o];\n    board[o] = null;\n\n    // castle\n    if (op === 'K') {\n      wc = [false, false];\n      if (Math.abs(t - o) === 2) {\n        kp = (o + t) / 2;\n        board[kp] = 'R';\n        board[t < o ? A1 : H1] = null;\n      }\n    } else if (op === 'k') {\n      bc = [false, false];\n      if (Math.abs(t - o) === 2) {\n        kp = (o + t) / 2;\n        board[kp] = 'r';\n        board[t < o ? A8 : H8] = null;\n      }\n    } else {\n      // set castling rights\n      const helper = (p) => {\n        switch (p) {\n          case A1: wc[0] = false; break;\n          case H1: wc[1] = false; break;\n          case A8: bc[0] = false; break;\n          case H8: bc[1] = false; break;\n          default: break;\n        }\n      }\n      helper(o);\n      helper(t);\n\n      // double move, en passant and pawn promotion\n      if (op === 'P') { // white\n        halfMoveClock = 0;\n\n        if (t - o === -16) ep = (t + o) / 2;\n        else if (t === this.ep) board[t + 8] = null;\n        else if (t <= H8) board[t] = (promo: any); // assume it's defined\n      } else if (op === 'p') { // black\n        halfMoveClock = 0;\n\n        if (t - o === 16) ep = (t + o) / 2;\n        else if (t === this.ep) board[t - 8] = null;\n        else if (t >= A1) board[t] = (promo: any);\n      }\n    }\n\n    const newHashes = this.hashMove(move, promo)\n\n    return new Position(board, next(this.turn), wc, bc, ep, kp,\n      halfMoveClock, score, newHashes[0], newHashes[1]);\n  }\n\n  /**\n   * Returns the value (change of position score) of a move. Assumes it's valid.\n   */\n  value(move: Move, promo?: Piece): number {\n    const o = move[0];\n    const t = move[1];\n    const op: Piece = (this.board[o]: any);\n    let tp: Piece = (this.board[t]: any);\n\n    // invalid castling detection, returns MAX_SAFE_INTEGER if last move's\n    // castle was invalid (if king is threatened on any of the squares\n    // it moves over)\n    if (this.kp !== -1 && Math.abs(t - this.kp) < 2) return 30000;\n\n    let score = pst[op][t] - pst[op][o];\n    // capture\n    if (tp) score += pst[tp][t];\n\n    // castling\n    if (op === 'K' && Math.abs(t - o) === 2) {\n      score += pst['R'][(t + o) / 2];\n      score -= t < o ? pst['R'][A1] : pst['R'][H1];\n    } else if (op === 'k' && Math.abs(t - o) === 2) {\n      score += pst['r'][(t + o) / 2];\n      score -= t < o ? pst['r'][A8] : pst['r'][H8];\n    }\n\n    // pawn stuff\n    if (op === 'P') {\n      if (t <= H8) score += pst[promo || 'Q'][t] - pst[op][t];\n      else if (t === this.ep) {\n        tp = (this.board[t + 8]: any);\n        score += pst[tp][t + 8];\n      }\n    } else if (op === 'p') {\n      if (t >= A1) score += pst[promo || 'q'][t] - pst[op][t];\n      else if (t === this.ep) {\n        tp = (this.board[t - 8]: any);\n        score += pst[tp][t - 8];\n      }\n    }\n    return score;\n  }\n\n  /** Returns the resulting hashes from a move (position hash and board hash).\n      Assumes it's a valid move. */\n  hashMove(move: Move, promo?: Piece): [Hash, Hash] {\n    const o = move[0];\n    const t = move[1];\n    const op: Piece = (this.board[o]: any);\n    let tp = this.board[t];\n\n    const newHash: Hash = (this.hash.slice(): any); // copy\n    const newBoardHash: Hash = (this.boardHash.slice(): any);\n\n    const applyHash = (hashParam: Hash) => {\n      newHash[0] ^= hashParam[0];\n      newHash[1] ^= hashParam[1];\n    }\n    const applyBoardHash = (hashParam: Hash) => {\n      newBoardHash[0] ^= hashParam[0];\n      newBoardHash[1] ^= hashParam[1];\n    }\n\n    // switch turn\n    applyHash(hashes.turn);\n\n    // if this position has an en passant or king passant, unhash it\n    if (this.ep !== -1) applyHash(hashes.epFile[this.ep % 8]);\n    if (this.kp !== -1) applyHash(hashes.kp[this.kp]);\n\n    applyHash(hashes[op][o]);\n    applyHash(hashes[op][t]);\n    applyBoardHash(hashes[op][o]);\n    applyBoardHash(hashes[op][t]);\n    if (tp) {\n      applyHash(hashes[tp][t]);\n      applyBoardHash(hashes[tp][t]);\n    }\n\n    // castling\n    if (op === 'K' && Math.abs(t - o) === 2) {\n      const kp = (t + o) / 2;\n      applyHash(hashes.wc[0]);\n      applyHash(hashes.wc[1]);\n      applyHash(hashes.kp[kp]);\n\n      applyHash(hashes['R'][kp]);\n      applyBoardHash(hashes['R'][kp]);\n      if (t < o) {\n        applyHash(hashes['R'][A1]);\n        applyBoardHash(hashes['R'][A1]);\n      } else {\n        applyHash(hashes['R'][H1]);\n        applyBoardHash(hashes['R'][H1]);\n      }\n    } else if (op === 'k' && Math.abs(t - o) === 2) {\n      const kp = (t + o) / 2;\n      applyHash(hashes.bc[0]);\n      applyHash(hashes.bc[1]);\n      applyHash(hashes.kp[kp]);\n\n      applyHash(hashes['r'][kp]);\n      applyBoardHash(hashes['r'][kp]);\n      if (t < o) {\n        applyHash(hashes['r'][A8]);\n        applyBoardHash(hashes['r'][A8]);\n      } else {\n        applyHash(hashes['r'][H8]);\n        applyBoardHash(hashes['r'][H8]);\n      }\n    } else {\n      const helper = (p) => {\n        switch (p) {\n          case A1: if (this.wc[0]) applyHash(hashes.wc[0]); break;\n          case H1: if (this.wc[1]) applyHash(hashes.wc[1]); break;\n          case A8: if (this.bc[0]) applyHash(hashes.bc[0]); break;\n          case H8: if (this.bc[1]) applyHash(hashes.bc[1]); break;\n          default: break;\n        }\n      }\n      helper(o);\n      helper(t);\n\n      // pawn stuff\n      if (op === 'P') {\n        // hash en passant\n        if (t - o === -16) applyHash(hashes.epFile[((t + o) / 2) % 8]);\n        else if (t === this.ep) {\n          tp = (this.board[t + 8]: any);\n          applyHash(hashes[tp][t + 8]);\n          applyBoardHash(hashes[tp][t + 8]);\n        } else if (t <= H8) {\n          applyHash(hashes[op][t]);\n          applyHash(hashes[promo || 'Q'][t]);\n          applyBoardHash(hashes[op][t]);\n          applyBoardHash(hashes[promo || 'Q'][t]);\n        }\n      } else if (op === 'p') {\n        if (t - o === 16) applyHash(hashes.epFile[((t + o) / 2) % 8]);\n        else if (t === this.ep) {\n          tp = (this.board[t - 8]: any);\n          applyHash(hashes[tp][t - 8]);\n          applyBoardHash(hashes[tp][t - 8]);\n        } else if (t >= A1) {\n          applyHash(hashes[op][t]);\n          applyHash(hashes[promo || 'q'][t]);\n          applyBoardHash(hashes[op][t]);\n          applyBoardHash(hashes[promo || 'q'][t]);\n        }\n      }\n    }\n    return [newHash, newBoardHash];\n  }\n\n  hashNullMove(): Hash {\n    const newHash: Hash = (this.hash.slice(): any); // copy old hash\n    const applyHash = (hashParam: Hash) => {\n      newHash[0] ^= hashParam[0];\n      newHash[1] ^= hashParam[1];\n    }\n\n    // if this position has an en passant or king passant, unhash it\n    if (this.ep !== -1) applyHash(hashes.epFile[this.ep % 8]);\n    if (this.kp !== -1) applyHash(hashes.kp[this.kp]);\n\n    applyHash(hashes.turn);\n\n    return newHash;\n  }\n\n  hashBoard(): Hash {\n    const hash: Hash = [0, 0];\n\n    for (let i = 0; i < 64; i++) {\n      const p = this.board[i];\n      if (p) {\n        // apply hash\n        hash[0] ^= hashes[p][i][0];\n        hash[1] ^= hashes[p][i][1];\n      }\n    }\n    return hash;\n  }\n\n  /**\n   * Checks if a move is valid.\n   */\n  valid(move: Move): boolean {\n    const moves = this.genMoves(); // generator\n    let el = moves.next();\n    while (!el.done) {\n      if (move[0] === el.value[0] && move[1] === el.value[1]) {\n        const nextPos = this.move(move);\n        const nextMoves = nextPos.genMoves();\n        let nextEl = nextMoves.next();\n        while (!nextEl.done) {\n          // check if the move was an invalid castle\n          if (nextPos.kp !== -1 && Math.abs(nextEl.value[1] - nextPos.kp) < 2) {\n            return false;\n          }\n          // check if the move results in king being taken\n          const tp = nextPos.board[nextEl.value[1]];\n          if (tp !== null && 'Kk'.includes(tp)) return false;\n          nextEl = nextMoves.next();\n        }\n        // if it passed all the tests, return true\n        return true;\n      }\n      el = moves.next();\n    }\n    return false;\n  }\n\n  /** Returns true if color is in check. If square is provided,\n      checks if that square is threatened. */\n  inCheck(color: Color = this.turn): boolean {\n    let mySteps; // steps for different pieces\n    let pawnSteps;\n    let pawn;\n    let kingSquare;\n    if (color === WHITE) {\n      // square position of king\n      kingSquare = this.board.indexOf('K');\n\n      mySteps = {\n        'bq': steps.B,\n        'rq': steps.R,\n        'n': steps.N,\n      };\n      pawn = 'p';\n      pawnSteps = [S + W, S + E];\n    } else {\n      kingSquare = this.board.indexOf('k');\n\n      mySteps = {\n        'BQ': steps.B,\n        'RQ': steps.R,\n        'N': steps.N,\n      }\n      pawn = 'P';\n      pawnSteps = [N + W, N + E];\n    }\n\n    // search all steps for all pieces\n    for (const key in mySteps) {\n      for (let i = 0; i < mySteps[key].length; i++) {\n        let t = kingSquare + mySteps[key][i];\n        while (t >= 0 && t <= 63 && colDif(t, t - mySteps[key][i]) < 6) {\n          if (this.board[t]) {\n            if (key.includes(this.board[t])) return true;\n            // pawns get special treatment\n            if (this.board[t] === pawn &&\n              (kingSquare === t + pawnSteps[0] ||\n              kingSquare === t + pawnSteps[1])) {\n              return true;\n            }\n            break;\n          }\n\n          if ('Nn'.includes(key)) break;\n          t += mySteps[key][i];\n        }\n      }\n    }\n    return false;\n  }\n\n  // Get fen of the position (fullMove set to 1)\n  toString() {\n    let fen = '';\n    let spaces = 0;\n    for (let i = 0; i < 64; i++) {\n      if (this.board[i] === null) spaces++;\n      else {\n        if (spaces > 0) {\n          fen += spaces;\n          spaces = 0;\n        }\n        fen += this.board[i];\n      }\n      if (i % 8 === 7) {\n        if (spaces > 0) {\n          fen += spaces;\n          spaces = 0;\n        }\n        if (i < 63) fen += '/';\n      }\n    }\n\n    fen += ' ';\n    if (this.turn === WHITE) fen += 'w';\n    else fen += 'b';\n\n    fen += ' ';\n    if (!this.wc[0] && !this.wc[1] && !this.bc[0] && !this.bc[1]) fen += '-';\n    else {\n      if (this.wc[1]) fen += 'K';\n      if (this.wc[0]) fen += 'Q';\n      if (this.bc[1]) fen += 'k';\n      if (this.bc[0]) fen += 'q';\n    }\n\n    fen += ' ';\n    if (this.ep !== -1) fen += squareToString(this.ep);\n    else fen += '-';\n\n    fen += ' ';\n    fen += this.halfMoveClock;\n\n    fen += ' ';\n    fen += 1; // fullMove\n\n    return fen;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/Position.js","/**\n * @module AI\n * The \"AI\", or computer mover.\n * @flow\n */\n\n// import Engine from './';\nimport Position, { A1, H8 } from './Position';\nimport { Cwf } from './tp'\nimport { PIECE } from './evaluation';\nimport { next } from './helpers';\nimport { PIECES } from './declarations';\n\nimport type { Move, Piece, History, Hash } from './declarations';\n\n// best moves for a position in reverse order\ntype Pv = [Move, Piece | void] | void;\n\n// Constants and types.\n\n// If value of position is > this, it means previous move was invalid\nconst MAX_SCORE = 15 * PIECE.Q; // with margin\n// How much to move alpha and beta in the mtd(f) until we have failed\n// both high and low\nconst SEARCH_MARGIN = 50;\n\n// fail low, high, hit exact (between alpha and beta) or invalid position\nconst L = 'L';\nconst E = 'E';\nconst H = 'H';\n\ntype Entry = {\n  pv: Pv, // moves previously beat alpha, from worst to best\n  score: number,\n  depth: number,\n  fail: 'L' | 'E' | 'H'\n};\n\nconst tp: Cwf<Entry> = new Cwf(1e7);\nconst boardTable: any = new Cwf(1e3); // table to find repeated positions\n\n// add methods to boardTable\nboardTable.push = function(hash: Hash) {\n  let count = this.get(hash); // if this position has been visited before\n  if (count !== undefined) this.add(hash, count + 1);\n  else this.add(hash, 1);\n}\nboardTable.pull = function(hash: Hash) {\n  let count = this.get(hash); // if this position has been visited before\n  if (count !== undefined && count > 0) this.add(hash, count - 1);\n}\n\n/* eslint-disable */\n// Data structure for storing killer moves (not pawn promotions)\nclass Killer {\n  origins: { [number]: { [number]: boolean } } = {};\n  constructor() {\n    return this;\n  }\n\n  add(move: Move) {\n    if (this.origins[move[0]]) this.origins[move[0]][move[1]] = true;\n    else {\n      this.origins[move[0]] = {};\n      this.origins[move[0]][move[1]] = true;\n    }\n  }\n\n  forEach(pos, callBack: (move: Move, tp: ?Piece) => boolean) {\n    for (const o in this.origins) {\n      for (const t in this.origins[o]) {\n        // TODO: Implement pseudo valid method on Position class and use\n        // here, then if it is pseudo-valid, call callback with the move\n      }\n    }\n  }\n}\n/* eslint-enable */\n\n// Logs\nlet tpHits = 0;\nlet searched = 0; // how many positions searched\n\nlet timeLimit;\nlet gotMove = false; // must have failed high or exact once to get a move\nconst timeout = () => Date.now() > timeLimit && gotMove;\n\n// Helper functions\n\n// Calls a callback function for all moves (as arguments) generated by genMoves,\n// including all 4 promotion moves for promotions. Runs through pv moves first.\n// if callback returns true, breaks. Returns true if there were any moves\n// generated, else false.\nfunction forMoves(pos: Position, pv: Pv,\n  callback: (move: Move, promo?: Piece, tp: ?Piece) => boolean): void {\n  if (pv) {\n    const move = pv[0];\n    let tp;\n    if (move[1] === pos.ep) {\n      if (pos.board[move[0]] === 'P') tp = pos.board[pos.ep + 8];\n      else if (pos.board[move[0]] === 'p') tp = pos.board[pos.ep - 8];\n      else tp = pos.board[move[1]];\n    } else tp = pos.board[move[1]];\n\n    if (callback(pv[0], pv[1], tp)) return; // move, promo\n  }\n\n  const moves = pos.genMoves();\n  let el = moves.next();\n  if (el.done) return; // if there are no valid moves\n\n  while (!el.done) {\n    const move = el.value;\n    let tp;\n    if (move[1] === pos.ep) {\n      if (pos.board[move[0]] === 'P') tp = pos.board[pos.ep + 8];\n      else tp = pos.board[pos.ep - 8];\n    } else tp = pos.board[move[1]];\n\n    if (pos.board[move[0]] === 'P' && move[1] <= H8) {\n      const promos = 'QNRB';\n      for (let i = 0; i < promos.length; i++) {\n        if (callback(move, (promos.charAt(i): any), tp)) return;\n      }\n    } else if (pos.board[move[0]] === 'p' && move[1] >= A1) {\n      const promos = 'qnrb';\n      for (let i = 0; i < promos.length; i++) {\n        if (callback(move, (promos.charAt(i): any), tp)) return;\n      }\n    } else if (callback(move, undefined, tp)) return;\n    el = moves.next();\n  }\n}\n\n// Check if a positino is stalemate. Assumes nobody is in check.\n// Promotion piece doesn't matter.\nfunction inStalemate(pos: Position) {\n  const moves = pos.genMoves();\n  let el = moves.next();\n  while (!el.done) {\n    // don't try castling, if the castle is valid, there is also a valid\n    // king move that don't gets you in check\n    // $FlowFixMe\n    if ('Kk'.includes(pos.board[el.value[0]]) && Math.abs(el.value[1] - el.value[0]) === 2) {\n      el = moves.next();\n      continue;\n    }\n\n    // if a move didn't get your king killed\n    if (!pos.move(el.value).inCheck(pos.turn)) {\n      return false; // not stalemate\n    }\n    el = moves.next();\n  }\n  return true; // stalemate\n}\n\nexport function getPieces(pos: Position) {\n  const pieces: Object = {};\n  PIECES.forEach((e) => { pieces[e] = 0 });\n  for (let i = 0; i < 64; i++) {\n    const p = pos.board[i];\n    if (p) pieces[p]++;\n  }\n  pieces.new = function(takenPiece?: Piece) {\n    const newPieces = Object.assign({}, this);\n    if (takenPiece) newPieces[takenPiece]--;\n    return newPieces;\n  }\n  pieces.endgame = function() {\n    if (this.Q > 0) {\n      if (this.R > 0 || this.B + this.N > 1) return false;\n    }\n    if (this.q > 0) {\n      if (this.r > 0 || this.b + this.n > 1) return false;\n    }\n    return true;\n  }\n  pieces.insufficientMaterial = function() {\n    return this.Q === 0 && this.q === 0 &&\n      this.P === 0 && this.p === 0 &&\n      this.R === 0 && this.r === 0 &&\n      (this.B === 0 || (this.B === 1 && this.N === 0)) &&\n      (this.b === 0 || (this.b === 1 && this.n === 0));\n  }\n\n  return pieces;\n}\n\n// Main algorithm\n\n// generic alpha-beta algorithm, doesn't assume mtd(f) search\nfunction alphaBeta(\n  pos: Position,\n  depth: number,\n  alpha: number,\n  beta: number,\n  pieces: Object,\n  root: boolean = false): number {\n  searched++;\n\n  // draw\n  if (pos.halfMoveClock >= 50) {\n    return 0;\n  }\n  if (boardTable.get(pos.boardHash) >= 3) {\n    return 0;\n  }\n\n  let stalemate = true; // true until proven otherwise\n  let pv: Pv; // default\n\n  // look up in tp\n  let entry: any = tp.get(pos.hash); // previous entry\n  if (entry) {\n    pv = entry.pv;\n    if (entry.depth >= depth) {\n      tpHits++;\n      switch (entry.fail) {\n        case L:\n          if (entry.score <= alpha) return alpha;\n          break;\n        case E:\n          return entry.score;\n        case H:\n          if (entry.score >= beta) return beta\n          break;\n        default: break;\n      }\n    }\n  }\n\n  // renew entry, use the previous pv as default\n  entry = (tp.add(pos.hash,\n    { pv: pv, score: alpha, depth: depth, fail: L }): Entry);\n\n  // Determine if endgame.\n  // Endgame begins when any side that has a queen has one other minorpiece maximum.\n  // Disable delta pruning, change king pst and look for stalemates.\n  const endgame: boolean = pieces.endgame();\n  if (endgame && pieces.insufficientMaterial()) {\n    entry.score = 0;\n    entry.fail = E;\n    return 0;\n  }\n\n  // Callback helper\n  const handleMove = (move, promo?, score) => {\n    // if time's out\n    if (timeout()) return true;\n\n    if (score > alpha) {\n      if (score >= MAX_SCORE) {\n        alpha = MAX_SCORE;\n        entry.fail = H\n        return true;\n      }\n\n      stalemate = false; // my move was valid\n      entry.pv = [move, promo]; // new pv\n\n      if (score >= beta) {\n        alpha = beta;\n        entry.fail = H;\n        return true;\n      } else {\n        alpha = score;\n        entry.fail = E;\n      }\n    } else if (score > -MAX_SCORE) stalemate = false; // if my move was valid\n    return false;\n  };\n\n  // quiescence search ( 2 * PIECE.P (200 centipawns) is the margin)\n  if (depth <= 0) {\n    // null move beta cutoff\n    if (pos.score >= beta) {\n      // if no moves gets you out of check, this position will fail low\n      if (pos.inCheck()) {\n        stalemate = false;\n\n        // test all moves\n        forMoves(pos, pv, (move, promo, tp) => {\n          // tp here is target piece, not transposition table\n          const nextPos = pos.move(move, promo);\n          // if this move got rid of the check threat (if the move after\n          // can't take king)\n          if (!nextPos.inCheck(pos.turn)) {\n            boardTable.push(nextPos.boardHash);\n            const score = -alphaBeta(nextPos, depth - 1, -beta, -alpha, pieces.new(tp));\n            boardTable.pull(nextPos.boardHash);\n            return handleMove(move, promo, score);\n          } else return false;\n        });\n      } else if (endgame && inStalemate(pos)) {\n        entry.score = 0;\n        entry.fail = E;\n        return 0;\n      } else {\n        entry.score = beta;\n        entry.fail = H;\n        return beta;\n      }\n    } else if (pos.score + PIECE.Q < alpha) {\n      if (pos.inCheck(next(pos.turn))) {\n        entry.fail = H;\n        entry.score = MAX_SCORE;\n        return MAX_SCORE; // king take or invalid castle\n      } else if (endgame && !pos.inCheck() && inStalemate(pos)) {\n        entry.score = 0;\n        entry.fail = E;\n        return 0;\n      }\n      // Might wanna try moves that check here later.\n\n      return alpha; // delta pruning\n    } else {\n      forMoves(pos, pv, (move, promo, tp) => {\n        // check if there was an invalid castle (saves time to do it here)\n        if (pos.kp !== -1 && Math.abs(pos.kp - move[1]) < 2) {\n          alpha = MAX_SCORE;\n          entry.fail = H;\n          return true;\n        }\n\n        // don't test silent moves\n        if (!pos.board[move[1]] && !(move[1] === pos.ep &&\n          'Pp'.includes((pos.board[move[0]]: any)))) return false;\n\n        const nextScore = pos.score + pos.value(move, promo);\n        // check if it's a king-take move, if it is we save a lot of time\n        if (nextScore >= MAX_SCORE) {\n          alpha = MAX_SCORE;\n          entry.fail = H;\n          return true;\n        }\n\n        // delta pruning\n        if ((pos.board[move[1]] || move[1] === pos.ep) && nextScore + 2 * PIECE.P >= alpha) {\n          // passes margin and not silent positon, search deeper\n          const nextPos = pos.move(move, promo, -nextScore);\n          boardTable.push(nextPos.boardHash);\n          const score = -alphaBeta(nextPos, depth - 1, -beta, -alpha, pieces.new(tp));\n          boardTable.pull(nextPos.boardHash);\n          return handleMove(move, promo, score);\n        }\n        return false; // let forMoves() keep running\n      });\n    }\n  } else {\n    // depth >= 1\n\n    // futiity pruning (use when searching deeper, not yet, need\n    // to watch out for king-take moves)\n    if (!root && depth === 1 && pos.score + PIECE.Q < alpha) {\n      if (pos.inCheck(next(pos.turn))) {\n        entry.score = MAX_SCORE;\n        entry.fail = H\n        return MAX_SCORE; // if you can take king\n      } else if (endgame && inStalemate(pos)) {\n        entry.score = 0;\n        entry.fail = E;\n        return 0;\n      }\n      return alpha;\n    }\n\n    // don't do nullmove at root or in endgame\n    // if in check, will not fail high\n    let score;\n    if (!root && !endgame) {\n      score = -alphaBeta(pos.nullMove(), depth - 3, -beta, -alpha, pieces.new());\n      if (score >= beta) {\n        entry.score = beta;\n        entry.fail = H;\n        return beta;\n      }\n    }\n\n    forMoves(pos, pv, (move, promo) => {\n      const nextScore = pos.score + pos.value(move, promo);\n      // check if it's a king-take move or if the previous move was an invalid\n      // castle, if it is we save a lot of time\n      if (nextScore >= MAX_SCORE) {\n        alpha = MAX_SCORE;\n        entry.fail = H;\n        return true;\n      }\n\n      if (depth === 1 && nextScore + 2 * PIECE.P < alpha) return false;\n\n      const nextPos = pos.move(move, promo, -nextScore);\n      boardTable.push(nextPos.boardHash);\n      const score = -alphaBeta(nextPos, depth - 1, -beta, -alpha, pieces.new());\n      boardTable.pull(nextPos.boardHash);\n      return handleMove(move, promo, score);\n    });\n  }\n\n  if (stalemate && endgame) {\n    if (!pos.inCheck() && inStalemate(pos)) {\n      entry.score = 0;\n      entry.fail = E;\n      return 0;\n    }\n  }\n\n  // could only have gotten a better score, we got interrupted\n  if (timeout()) {\n    entry.fail = H;\n  }\n\n  // alpha should have been changed to beta on beta cutoff\n  entry.score = alpha;\n  return alpha;\n}\n\nfunction mtdf(pos: Position, depth: number, guess: number): number {\n  const bound = { lower: -MAX_SCORE, upper: MAX_SCORE };\n  let beta;\n  let f = guess - 2 * SEARCH_MARGIN; // start lower to fail high earlier\n\n  const pieces = getPieces(pos);\n\n  do {\n    // find a window of size margin, then do a binary search in it\n    if (bound.lower !== -MAX_SCORE && bound.upper !== MAX_SCORE) {\n      if (bound.upper - bound.lower > 3) beta = Math.floor((bound.lower + bound.upper) / 2);\n      else beta = f + (f === bound.lower ? 1 : 0);\n    } else if (f === bound.lower) beta = f + SEARCH_MARGIN;\n    else if (f === bound.upper) beta = f - SEARCH_MARGIN;\n    else beta = f;\n\n    f = alphaBeta(pos, depth, beta - 1, beta, pieces.new(), true);\n\n    if (f < beta) bound.upper = f;\n    else {\n      bound.lower = f;\n      gotMove = true;\n    }\n  } while (bound.lower <= bound.upper - 1 && !timeout()); // - 0.01 for floating point inaccuracy\n\n  return f;\n}\n\n// Assumes there are valid moves.\n// @param time How many milliseconds to think. Min: 1000 Max. 60000\nexport default async function move(pos: Position,\n  history: History,\n  time: number = 5000,\n  logs: Object,\n  betweenDepths?: () => Promise<any>): Promise<[Move, Piece | void]> {\n  let score = pos.score;\n  let entry: any;\n\n  // set up position table (for three-repeat rule)\n  history.forEach(e => {\n    boardTable.push(new Position(e.fen).boardHash);\n  });\n  boardTable.push(pos.boardHash);\n\n  if (time < 1000) time = 1000;\n  if (time > 60000) time = 60000\n\n  // timeLimit and timeOut() is defined globally higher up\n  timeLimit = Date.now() + time; // run for 5 sec\n\n  // reset logging information\n  logs.searched = 0;\n  logs.tpHits = 0;\n\n  // iterative deepening\n  let i = 1;\n  while (i < 100 && !timeout()) {\n    logs.depth = i;\n    if (betweenDepths) await betweenDepths();\n\n    // get the tp entry from the previous depth\n    if (i > 1) entry = tp.get(pos.hash);\n    score = mtdf(pos, i, score)\n    i++;\n    logs.searched = searched;\n    logs.tpHits = tpHits;\n  }\n  gotMove = false; // reset this\n  searched = 0;\n  tpHits = 0;\n\n  // compare entry from the latest depth (that got interrupted)\n  // to the entry from the depth before to see which one is best\n  const deepestEntry: any = tp.get(pos.hash); // should always be a hit\n  // if we didn't even finish depth 1, entry won't be defined\n  if (!entry || (deepestEntry.score > entry.score &&\n    (deepestEntry.fail !== L))) entry = deepestEntry;\n\n  console.log('searched: ' + logs.searched);\n  console.log('hits: ' + logs.tpHits + '\\n');\n\n  tp.clear();\n  boardTable.clear();\n  return entry.pv;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/AI.js","/**\n * A javascript chess engine inspired by\n * [sunfish](https://github.com/thomasahle/sunfish) and\n * [chess.js](https://github.com/jhlywa/chess.js).\n * @module jackfish\n * @author Mattias Ahlsén (mattias.ahlsen@gmail.com)\n * @example\n * import Engine from 'jackfish';\n * const game = new Engine();\n *\n * @flow\n */\n\ntype Square = number | string;\n\nimport { PIECES, BLACK, WHITE } from './declarations';\nimport Position from './Position';\nimport { rank, parse, squareToString, equalBoards } from './helpers';\nimport aimove, { getPieces } from './AI';\n\nimport type { Board, Piece, Move, CR, History } from './declarations';\n\n/*\nThe board is represented as an array with indexes like this:\n8 |  0  1  2  3  4  5  6  7\n7 |  8  9  10 11 12 13 14 15\n6 |  16 17 18 19 20 21 22 23\n5 |  24 25 26 27 28 29 30 31\n4 |  32 33 34 35 36 37 38 39\n3 |  40 41 42 43 44 45 46 47\n2 |  48 49 50 51 52 53 54 55\n1 |  56 57 58 59 60 61 62 63\n  |_________________________\n     A  B  C  D  E  F  G  H\n\nPieces are represented as characters with uppercase letters for white pieces\nand lowercase for black pieces, as in FEN notation:\nPawn: 'P' and 'p'\nKnight: 'N' and 'n'\nBishop: 'B' and 'b'\nRook: 'R' and 'r'\nQueen: 'Q' and 'q'\nKing: 'K' and 'k'\n*/\n\n/**\n * Configuration object for the engine.\n * @name Options\n * @property {string?}   startPos     The FEN string of the starting position.\n * @property {Function?} betweenDepth Async function that returns a promise,\n *                                    that runs between every depth of the AI\n *                                    searches.\n * @property {number} searchTime      Time for the AI to search in seconds.\n * @example\n * const options = {\n *   startPos: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n     betweenDepths: ''\n * }\n */\nexport type Options = {\n  startPos?: string,\n  searchTime?: number,\n  betweenDepths?: () => Promise<any>,\n};\n\ntype Config = {\n  startPos: string,\n  searchTime: number,\n  betweenDepths?: () => Promise<any>,\n};\n\nconst defaultConfig: Config = {\n  startPos: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n  searchTime: 5,\n};\n\n/**\n * The chess engine, including game mechanics and\n * a configurable AI. (default export)\n * @example const game = new Engine();\n * @param options Configuration object.\n * @param {string}\n * [options.startPos='rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1']\n * See {@link Options}.\n *\n * @return {Engine}\n */\nexport default class Engine {\n  config: Config = defaultConfig;\n  history: History = [];\n  position: Position;\n  fullMove: number;\n\n  aiInfo: {\n    depth: number,\n    searched: number,\n    tpHits: number,\n  } = ({\n    depth: 0,\n    searched: 0,\n    tpHits: 0,\n  }: any);\n\n  betweenDepths: () => Promise<any>;\n\n  constructor(options?: Options) {\n    if (options) this.configure(options);\n    this.setPos(this.config.startPos);\n  }\n\n  /**\n   * Configurate the engine (only changes passed properties).\n   * @example\n   * // set starting position to standard\n   * game.configure({ startPos: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1' });\n   * @param options   Same type of configuration object passed to\n   *                  constructor.\n   */\n  configure(options: Options): void {\n    for (const key in options) {\n      this.config[key] = options[key];\n    }\n  }\n\n  /**\n   * Get the current configuration, including all default values.\n   * @return The configuration object.\n   */\n  getConfig(): Config {\n    return this.config;\n  }\n\n  /**\n   * Changes to the new position and clears history array.\n   * @param fen The FEN string of the position to be set.\n   * @return True if the FEN string was valid enough and the position was\n   *         successfully changed.\n   */\n  setPos(fen: string): boolean {\n    const board: Board = [];\n    let turn;\n    let wc: CR = [false, false];\n    let bc: CR = [false, false];\n    let ep = -1; // default is none\n    let kp = -1;\n    let halfMoveClock;\n    let fullMove;\n\n    const subs = fen.trim().split(/ +/); // get substrings\n    if (subs.length !== 6) return false;\n\n    let pos = 0; // current board position (square)\n    let i = 0; // index of string\n    // The board array is indexed the same way as FEN notation.\n    while (i < subs[0].length) {\n      let c = subs[0].charAt(i); // currently parsed char\n      const num = parseInt(c);\n      if (Number.isInteger(num) && num > 0) {\n        if (num > 8 - pos % 8) return false;\n        for (let j = 0; j < num; j++) {\n          board[pos + j] = null;\n        }\n        pos += num;\n      } else if (PIECES.includes(c)) {\n        // Cast to piece when we know it is one.\n        c = ((c: any): Piece)\n        board[pos] = c;\n        pos++;\n      } else {\n        return false; // invalid FEN\n      }\n      i++;\n      if (pos >= 64) break; // should not be able to be bigger than 64\n      else if (pos % 8 === 0) {\n        if (subs[0].charAt(i) !== '/') return false;\n        i++;\n      }\n    }\n    if (fen.charAt(i) !== ' ') return false;\n\n    switch (subs[1]) {\n      case 'w': turn = WHITE; break;\n      case 'b': turn = BLACK; break;\n      default: return false;\n    }\n\n    if (subs[2] !== '-') {\n      if (subs[2].length > 4) return false;\n      const used = [];\n      for (let i = 0; i < subs[2].length; i++) {\n        const c = subs[2].charAt(i);\n        if (used.includes(c)) return false; // may only occur once\n        switch (c) {\n          case 'Q': wc[0] = true; break;\n          case 'K': wc[1] = true; break;\n          case 'q': bc[1] = true; break;\n          case 'k': bc[0] = true; break;\n          default: return false;\n        }\n        used.push(c);\n      }\n    }\n\n    if (subs[3] !== '-') {\n      ep = parse(subs[3]);\n      const r = rank(ep);\n      if (isNaN(ep)) return false;\n      if (r !== 3 && r !== 6) return false;\n    }\n\n    halfMoveClock = parseInt(subs[4]);\n    fullMove = parseInt(subs[5]);\n    if (!(Number.isInteger(halfMoveClock) && halfMoveClock >= 0)) return false;\n    if (!(Number.isInteger(fullMove) && fullMove > 0)) return false;\n\n    // if we've made it this far, we're golden\n    this.fullMove = fullMove;\n    this.position = new Position(board, turn, wc, bc, ep, kp, halfMoveClock);\n    this.history = [];\n    return true;\n  }\n\n  /**\n   * Returns the FEN representation of the game.\n   * @return The FEN string.\n   */\n  fen(): string {\n    const pos = this.position;\n    const board = pos.board;\n    let fen = '';\n    let spaces = 0;\n    for (let i = 0; i < 64; i++) {\n      if (board[i] === null) spaces++;\n      else {\n        if (spaces > 0) {\n          fen += spaces;\n          spaces = 0;\n        }\n        fen += board[i];\n      }\n      if (i % 8 === 7) {\n        if (spaces > 0) {\n          fen += spaces;\n          spaces = 0;\n        }\n        if (i < 63) fen += '/';\n      }\n    }\n\n    fen += ' ';\n    if (pos.turn === WHITE) fen += 'w';\n    else fen += 'b';\n\n    fen += ' ';\n    if (!pos.wc[0] && !pos.wc[1] && !pos.bc[0] && !pos.bc[1]) fen += '-';\n    else {\n      if (pos.wc[1]) fen += 'K';\n      if (pos.wc[0]) fen += 'Q';\n      if (pos.bc[1]) fen += 'k';\n      if (pos.bc[0]) fen += 'q';\n    }\n\n    fen += ' ';\n    if (pos.ep !== -1) fen += squareToString(pos.ep);\n    else fen += '-';\n\n    fen += ' ';\n    fen += pos.halfMoveClock;\n\n    fen += ' ';\n    fen += this.fullMove;\n\n    return fen;\n  }\n\n  /**\n   * Moves from position o to position t, making sure it's a valid move.\n   * Positions can be on the form 0 for A8, 7 for H8, ..., 56 for A1,\n   * 63 for H1, or simply on the form 'a1', 'b7', etc...\n   * @param o Origin position.\n   * @param t Target position.\n   * @return True if it was a valid move.\n   */\n  move(o: Square, t: Square, promo?: Piece): boolean {\n    // parse() returns NaN for invalid position strings\n    o = (parse(o): number);\n    t = (parse(t): number);\n\n    // check that promotion piece is valid if there is one\n    if (promo) {\n      if (this.position.turn === WHITE) {\n        if (!'QNRB'.includes(promo)) return false;\n      } else if (!'qnrb'.includes(promo)) return false;\n    }\n\n    if (this.valid(o, t)) {\n      this.history.push({fen: this.fen(), move: [o, t]});\n      this.position = this.position.move([o, t], promo);\n      if (this.position.turn === WHITE) this.fullMove += 1;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Undoes the latest move if there is one.\n   * @return The move that was undone on the form [origin, target] or null if\n   * there were no previous moves.\n   */\n  undoMove(): Move | null {\n    const history = this.history; // save this, setPos() clears it\n    const last = history.pop();\n    if (last) {\n      this.setPos(last.fen);\n      this.history = history; // need to set this because setPos() clears it\n      return last.move;\n    }\n    return null;\n  }\n\n  /**\n   * Get winner if there is one.\n   */\n  winner(): 'white' | 'black' | 'draw' | null {\n    if (this.inCheckMate()) {\n      if (this.position.turn === WHITE) return 'black';\n      else return 'white';\n    }\n\n    if (this.fiftyMoves() || this.inThreefoldRepetition() ||\n      this.inStaleMate() || this.insuffMaterial()) return 'draw'\n\n    return null;\n  }\n\n  insuffMaterial() {\n    return getPieces(this.position).insufficientMaterial();\n  }\n\n  /** Returns true if in draw according to fifty move rule. */\n  fiftyMoves(): boolean {\n    return this.position.halfMoveClock >= 50;\n  }\n\n  /** Returns true if the current board position has ocurred 3 or more times. */\n  inThreefoldRepetition(): boolean {\n    let count = 1; // starts at 1 because current position is 1 occurence\n    for (let i = 0; i < this.history.length; i++) {\n      const game = new Engine();\n      game.setPos(this.history[i].fen);\n      if (equalBoards(game.position.board, this.position.board)) {\n        count++;\n        if (count === 3) return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if side to move is in checkmate.\n   */\n  inCheckMate(): boolean {\n    return this.moves().length === 0 && this.position.inCheck();\n  }\n\n  /**\n   * Check if in stalemate.\n   */\n  inStaleMate(): boolean {\n    return this.moves().length === 0 && !this.position.inCheck();\n  }\n\n  /** Returns an array of valid moves. Only returns one move for promotions. */\n  moves(): Array<Move> {\n    const moves = [];\n    const generator = this.position.genMoves(); // move generator\n    let el = generator.next();\n    while (!el.done) {\n      if (this.position.valid(el.value)) moves.push(el.value);\n      el = generator.next();\n    }\n    return moves;\n  }\n\n  /**\n   * Returns true if a move is valid.\n   */\n  valid(o: Square, t: Square): boolean {\n    o = parse(o);\n    t = parse(t);\n\n    return this.position.valid([o, t]);\n  }\n\n  /**\n   * Sets position to the starting position set in config.startingPos (default\n   * is normal starting position).\n   */\n  restart(): void {\n    this.setPos(this.config.startPos);\n  }\n\n  /**\n   * Let the AI make a move. If there are no valid moves, return null.\n   * @param [time=5000] Time to think in milliseconds. Min-value: 1000.\n   * @return The move that was made.\n   */\n  async aiMove(): Promise<[Move, Piece | void] | void> {\n    // This implies that there are valid moves to be made.\n    if (this.winner() !== null) return;\n\n    const move = await aimove(this.position, this.history,\n      this.config.searchTime, this.aiInfo, this.config.betweenDepths);\n    if (move) {\n      this.move(move[0][0], move[0][1], move[1]);\n\n      return move;\n    } else throw new Error('The AI failed to make a move');\n  }\n\n  /**\n   * Returns whose turn it is.\n   * @return turn\n   */\n  turn(): 'white' | 'black' {\n    if (this.position.turn === WHITE) return 'white';\n    else return 'black';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/index.js","<template>\n  <div>\n    <h1>Jackfish</h1>\n    <h2>A chess engine in javascript.</h2>\n    <div class=\"game-status\">\n      <h3 v-if=\"winner === 'white'\">The winner is\n        <span class=\"white\">white</span></h3>\n      <h3 v-else-if=\"winner === 'black'\">The winner is\n        <span class=\"black\">black</span></h3>\n      <h3 v-else-if=\"winner === 'draw'\">It's a draw</h3>\n      <h3 v-else :style=\"{ visibility: 'hidden' }\">\n        Game is still running.\n      </h3>\n\n      <button type=\"button\" class=\"btn btn-light\" @click=\"undoMove\">\n        Undo move\n      </button>\n      <button type=\"button\" class=\"btn btn-light\" @click=\"restart\">\n        Restart\n      </button>\n\n      <div class=\"mt-3\">\n        <h6>AI search time</h6>\n        <div class=\"mb-2\"><input v-model=\"game.config.searchTime\"></div>\n        <button type=\"button\" class=\"btn btn-outline-success\" @click=\"setTime(2)\">Easy</button>\n        <button type=\"button\" class=\"btn btn-outline-warning\" @click=\"setTime(4)\">Medium</button>\n        <button type=\"button\" class=\"btn btn-outline-danger\"  @click=\"setTime(6)\">Danger</button>\n      </div>\n\n      <div class=\"mt-3\">\n        <h6>Fen of starting position.</h6>\n        <div><input v-model=\"startPos\" class=\"fen\"></div>\n        <button class=\"btn btn-dark\" @click=\"setStartPos\">Set position</button>\n        <button class=\"btn btn-dark\" @click=\"resetStartPos\">Reset</button>\n        <p v-if=\"invalidStartPos\" class=\"text-danger\">Invalid FEN string</p>\n      </div>\n\n      <div class=\"mt-3\">\n        <h6>\n          <a href=\"https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation\">\n            FEN\n          </a> of board\n        </h6>\n        <div><input v-model=\"fen\" class=\"fen\"></div>\n        <button class=\"btn btn-dark\" @click=\"setPos\">Set position</button>\n        <p v-if=\"invalidFen\" class=\"text-danger\">Invalid FEN string</p>\n      </div>\n\n      <div class=\"mt-3\">\n        <p><strong>Depth:</strong> {{aiInfo.depth}}</p>\n        <p><strong>Nodes searched:</strong> {{aiInfo.searched}}</p>\n        <p><strong>Hits in transposition table:</strong> {{aiInfo.tpHits}}</p>\n      </div>\n    </div>\n\n    <Promotion v-if=\"promotion\" :pos=\"promotion.pos\" :board=\"$refs.board\"\n      :color=\"promotion.color\" @done=\"handlePromotion\">\n    </Promotion>\n    <div id=\"board\" ref=\"board\" @click=\"cancel\">\n    </div>\n\n    <div class=\"links\">\n      <h3>About</h3>\n      <p>\n        This is a chess engine I've built in javascript. The \"AI\" uses\n        <a href=\"https://chessprogramming.wikispaces.com/MTD%28f%29\">mtd(f)</a>.\n        All rules apply: insufficient material, fifty-move rule, threefold\n        repetition etc, and the AI recognizes all these as draws and evaluates\n        them accordingly. See more below.\n      </p>\n      <a class=\"btn btn-primary btn-lg\" href=\"https://github.com/mattiasahlsen/jackfish/\" role=\"button\">\n        Github repo\n      </a>\n    </div>\n\n    <div class=\"about mt-4 mb-4\">\n      <h4 class=\"mt-3\">Features</h4>\n      <ul class=\"list-group\">\n        <li class=\"list-group-item\">\n          <a href=\"https://chessprogramming.wikispaces.com/Simplified+evaluation+function\">\n            Piece-square table evaluation\n          </a>\n        </li>\n        <li class=\"list-group-item\">\n          <a href=\"https://chessprogramming.wikispaces.com/Transposition%20Table#KeyCollisions\">\n            Transposition table\n          </a>\n        </li>\n        <li class=\"list-group-item\">\n          <a href=\"https://chessprogramming.wikispaces.com/Quiescence+Search\">\n            Quiescence search\n          </a>\n        <li class=\"list-group-item\">\n          <a href=\"https://chessprogramming.wikispaces.com/delta+pruning\">\n            Delta pruning\n          </a>\n        </li>\n      </ul>\n\n      <h4 class=\"mt-3\">To be implemented</h4>\n      <ul class=\"list-group\">\n        <li class=\"list-group-item\">\n          <a href=\"https://chessprogramming.wikispaces.com/Killer+Move\">\n            Killer heuristic\n          </a>\n        </li>\n        <li class=\"list-group-item\">\n          <a href=\"https://chessprogramming.wikispaces.com/Pawn%20Structure\">\n            Pawn structure evaluation\n          </a>\n        </li>\n      </ul>\n\n      <h4 class=\"mt-3\">Credits to</h4>\n      <a href=\"https://chessprogramming.wikispaces.com/\">https://chessprogramming.wikispaces.com/</a>\n      <br>\n      <a href=\"https://github.com/thomasahle/sunfish\">https://github.com/thomasahle/sunfish</a>\n    </div>\n    <p class=\"created-by\">Created by Mattias Ahlsén</p>\n  </div>\n</template>\n\n<script>\nimport Promotion from './Promotion';\n\n// Images for the chess board are copied to /static/img\nimport Chessboard from 'chessboardjs';\nimport 'chessboardjs/www/css/chessboard.css';\n\nimport Engine from '@/jackfish';\nimport { WHITE, BLACK } from '@/jackfish/declarations';\nimport { rank, parse } from '@/jackfish/helpers';\n\nconst game = new Engine();\nconst dummyGame = new Engine(); // used for it's methods\n\nexport default {\n  name: 'Home',\n  components: {\n    Promotion,\n  },\n\n  data () {\n    return {\n      game: game,\n      promotion: null,\n      winner: game.winner(),\n      aiInfo: game.aiInfo,\n\n      fen: game.fen(),\n      startPos: game.config.startPos,\n    };\n  },\n  computed: {\n    invalidFen() {\n      return !dummyGame.setPos(this.fen);\n    },\n    invalidStartPos() {\n      return !dummyGame.setPos(this.startPos);\n    },\n  },\n  watch: {\n    'game.position.board': function() {\n      this.board.position(this.game.fen(), false);\n      this.winner = this.game.winner();\n      this.fen = this.game.fen();\n    },\n    'game.position.turn': function() {\n      if (this.game.turn() === 'black' && this.game.winner() === null) {\n        setTimeout(() => this.game.aiMove(5000), 100);\n      }\n    },\n\n    'game.aiInfo': {\n      handler: function(val) { this.aiInfo = val; }, deep: true\n    }\n  },\n  mounted () {\n    this.game.configure({\n      betweenDepths: () => {\n        // nothing else works to force a re-render... Vue seems to be bugged.\n        return new Promise(resolve => setTimeout(resolve, 10));\n      },\n    })\n\n    const onDragStart = (src, piece) => {\n      return (piece.charAt(0) === 'w' ? WHITE : BLACK) === this.game.position.turn &&\n      this.winner === null;\n    }\n\n    const onDrop = (src, target, piece) => {\n      if (!this.game.valid(src, target)) return 'snapback';\n\n      // pawn promotion\n      const r = rank(parse(target));\n      if (piece.charAt(1) === 'P' && (r === 8 || r === 1)) {\n        const color = (piece.charAt(0) === 'w') ? WHITE : BLACK;\n        // this refers to the vue object\n        this.promotion = {\n          pos: parse(target),\n          color,\n          src,\n          target,\n        };\n        return;\n      }\n\n      this.game.move(src, target); // we already know it's valid\n    }\n\n    this.board = Chessboard('board', {\n      position: this.game.fen(),\n      draggable: true,\n      onDrop,\n      onDragStart,\n    });\n  },\n  methods: {\n    handlePromotion(piece) {\n      this.game.move(\n        this.promotion.src,\n        this.promotion.target,\n        piece\n      );\n      this.promotion = null;\n    },\n    cancel() {\n      // cancel pawn promotion primarily\n      this.promotion = null;\n      this.board.position(this.game.fen(), false);\n    },\n    undoMove() {\n      this.game.undoMove();\n      if (game.position.turn === BLACK) this.game.undoMove();\n    },\n    restart() {\n      this.game.restart();\n    },\n\n    setPos() {\n      if (this.game.setPos(this.fen)) this.fen = this.game.fen();\n    },\n    setStartPos() {\n      if (dummyGame.setPos(this.startPos)) {\n        this.game.configure({\n          startPos: this.startPos\n        });\n      }\n    },\n    resetStartPos() {\n      this.game.configure({\n        startPos: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n      });\n      this.startPos = this.game.config.startPos;\n    },\n    setTime(time) {\n      this.game.configure({\n        searchTime: time,\n      });\n    }\n  },\n}\n</script>\n\n<style scoped>\n#board {\n  width: 50%;\n  margin: auto;\n  margin-bottom: 50px;\n  display: inline-block;\n  float: left;\n}\n.game-status {\n  float: left;\n  width: 25%;\n}\n.game-status h3 {\n  color: #737373;\n}\n.white {\n  color: #a6a6a6;\n}\n.black {\n  color: #333333;\n}\n\n.fen {\n  width: 90%;\n  margin-bottom: 10px;\n}\n\n.links {\n  float: left;\n  width: 25%;\n  padding: 5px;\n}\n\n.about {\n  padding: 5px;\n  float: left;\n  width: 100%;\n}\n.created-by {\n  display: inline-block;\n  float: right;\n  margin-right: 10px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Home.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"Jackfish\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"A chess engine in javascript.\")]),_vm._v(\" \"),_c('div',{staticClass:\"game-status\"},[(_vm.winner === 'white')?_c('h3',[_vm._v(\"The winner is\\n      \"),_c('span',{staticClass:\"white\"},[_vm._v(\"white\")])]):(_vm.winner === 'black')?_c('h3',[_vm._v(\"The winner is\\n      \"),_c('span',{staticClass:\"black\"},[_vm._v(\"black\")])]):(_vm.winner === 'draw')?_c('h3',[_vm._v(\"It's a draw\")]):_c('h3',{style:({ visibility: 'hidden' })},[_vm._v(\"\\n      Game is still running.\\n    \")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-light\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.undoMove}},[_vm._v(\"\\n      Undo move\\n    \")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-light\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.restart}},[_vm._v(\"\\n      Restart\\n    \")]),_vm._v(\" \"),_c('div',{staticClass:\"mt-3\"},[_c('h6',[_vm._v(\"AI search time\")]),_vm._v(\" \"),_c('div',{staticClass:\"mb-2\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.game.config.searchTime),expression:\"game.config.searchTime\"}],domProps:{\"value\":(_vm.game.config.searchTime)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.game.config, \"searchTime\", $event.target.value)}}})]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-outline-success\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.setTime(2)}}},[_vm._v(\"Easy\")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-outline-warning\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.setTime(4)}}},[_vm._v(\"Medium\")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-outline-danger\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.setTime(6)}}},[_vm._v(\"Danger\")])]),_vm._v(\" \"),_c('div',{staticClass:\"mt-3\"},[_c('h6',[_vm._v(\"Fen of starting position.\")]),_vm._v(\" \"),_c('div',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.startPos),expression:\"startPos\"}],staticClass:\"fen\",domProps:{\"value\":(_vm.startPos)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.startPos=$event.target.value}}})]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-dark\",on:{\"click\":_vm.setStartPos}},[_vm._v(\"Set position\")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-dark\",on:{\"click\":_vm.resetStartPos}},[_vm._v(\"Reset\")]),_vm._v(\" \"),(_vm.invalidStartPos)?_c('p',{staticClass:\"text-danger\"},[_vm._v(\"Invalid FEN string\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"mt-3\"},[_vm._m(0),_vm._v(\" \"),_c('div',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.fen),expression:\"fen\"}],staticClass:\"fen\",domProps:{\"value\":(_vm.fen)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.fen=$event.target.value}}})]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-dark\",on:{\"click\":_vm.setPos}},[_vm._v(\"Set position\")]),_vm._v(\" \"),(_vm.invalidFen)?_c('p',{staticClass:\"text-danger\"},[_vm._v(\"Invalid FEN string\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"mt-3\"},[_c('p',[_c('strong',[_vm._v(\"Depth:\")]),_vm._v(\" \"+_vm._s(_vm.aiInfo.depth))]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"Nodes searched:\")]),_vm._v(\" \"+_vm._s(_vm.aiInfo.searched))]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"Hits in transposition table:\")]),_vm._v(\" \"+_vm._s(_vm.aiInfo.tpHits))])])]),_vm._v(\" \"),(_vm.promotion)?_c('Promotion',{attrs:{\"pos\":_vm.promotion.pos,\"board\":_vm.$refs.board,\"color\":_vm.promotion.color},on:{\"done\":_vm.handlePromotion}}):_vm._e(),_vm._v(\" \"),_c('div',{ref:\"board\",attrs:{\"id\":\"board\"},on:{\"click\":_vm.cancel}}),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_c('p',{staticClass:\"created-by\"},[_vm._v(\"Created by Mattias Ahlsén\")])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h6',[_c('a',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation\"}},[_vm._v(\"\\n          FEN\\n        \")]),_vm._v(\" of board\\n      \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"links\"},[_c('h3',[_vm._v(\"About\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n      This is a chess engine I've built in javascript. The \\\"AI\\\" uses\\n      \"),_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/MTD%28f%29\"}},[_vm._v(\"mtd(f)\")]),_vm._v(\".\\n      All rules apply: insufficient material, fifty-move rule, threefold\\n      repetition etc, and the AI recognizes all these as draws and evaluates\\n      them accordingly. See more below.\\n    \")]),_vm._v(\" \"),_c('a',{staticClass:\"btn btn-primary btn-lg\",attrs:{\"href\":\"https://github.com/mattiasahlsen/jackfish/\",\"role\":\"button\"}},[_vm._v(\"\\n      Github repo\\n    \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"about mt-4 mb-4\"},[_c('h4',{staticClass:\"mt-3\"},[_vm._v(\"Features\")]),_vm._v(\" \"),_c('ul',{staticClass:\"list-group\"},[_c('li',{staticClass:\"list-group-item\"},[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/Simplified+evaluation+function\"}},[_vm._v(\"\\n          Piece-square table evaluation\\n        \")])]),_vm._v(\" \"),_c('li',{staticClass:\"list-group-item\"},[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/Transposition%20Table#KeyCollisions\"}},[_vm._v(\"\\n          Transposition table\\n        \")])]),_vm._v(\" \"),_c('li',{staticClass:\"list-group-item\"},[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/Quiescence+Search\"}},[_vm._v(\"\\n          Quiescence search\\n        \")])]),_c('li',{staticClass:\"list-group-item\"},[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/delta+pruning\"}},[_vm._v(\"\\n          Delta pruning\\n        \")])])]),_vm._v(\" \"),_c('h4',{staticClass:\"mt-3\"},[_vm._v(\"To be implemented\")]),_vm._v(\" \"),_c('ul',{staticClass:\"list-group\"},[_c('li',{staticClass:\"list-group-item\"},[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/Killer+Move\"}},[_vm._v(\"\\n          Killer heuristic\\n        \")])]),_vm._v(\" \"),_c('li',{staticClass:\"list-group-item\"},[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/Pawn%20Structure\"}},[_vm._v(\"\\n          Pawn structure evaluation\\n        \")])])]),_vm._v(\" \"),_c('h4',{staticClass:\"mt-3\"},[_vm._v(\"Credits to\")]),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/\"}},[_vm._v(\"https://chessprogramming.wikispaces.com/\")]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"https://github.com/thomasahle/sunfish\"}},[_vm._v(\"https://github.com/thomasahle/sunfish\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4cd160ea\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Home.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4cd160ea\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Home.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4cd160ea\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Home.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4cd160ea\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Home.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from '@/components/Home'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'Home',\n      component: Home\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\n\nimport $ from 'jquery';\nwindow.$ = window.jquery = $;\n\n// this might require the jquery variable to be available\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}