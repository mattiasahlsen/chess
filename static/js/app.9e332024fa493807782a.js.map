{"version":3,"sources":["webpack:///./src/App.vue?a157","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/jackfish/declarations.js","webpack:///src/components/Promotion.vue","webpack:///./src/components/Promotion.vue?9712","webpack:///./src/components/Promotion.vue","webpack:///./src/jackfish/helpers.js","webpack:///./src/jackfish/evaluation.js","webpack:///./src/jackfish/tp.js","webpack:///./src/jackfish/Position.js","webpack:///./src/jackfish/AI.js","webpack:///./src/jackfish/index.js","webpack:///src/components/Home.vue","webpack:///./src/components/Home.vue?090f","webpack:///./src/components/Home.vue","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/assets/img/chesspieces/wikipedia lazy ^\\.\\/.*\\.png$"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","ssrContext","WHITE","BLACK","PIECES","imgs","white","Q","N","R","B","black","q","n","r","b","key","then","val","_loop","_loop2","Promotion","data","props","computed","file","pos","urls","color","width","board","offsetWidth","offset","getBoundingClientRect","x","components_Promotion","_vm","staticClass","style","left","_l","img","piece","src","on","click","$event","$emit","src_components_Promotion","Promotion_normalizeComponent","isWhite","charAt","toUpperCase","isColor","sameColor","p1","p2","next","c","colDif","Math","abs","rank","p","floor","parse","s","length","NaN","toLowerCase","charCodeAt","a","h","squareToString","String","fromCharCode","toString","concat","equalBoards","b1","b2","i","PIECE","P","K","pstRaw","pst","bKey","forEach","e","push","evaluation__loop","evaluate","value","Random","require","random","engines","mt19937","seed","rand","integer","pow","randoms","hashes","turn","wc","bc","epFile","kp","kps","Lru","maxSize","classCallCheck_default","map","map_default","createClass_default","size","hash","low","high","arr","get","undefined","delete","set","keys","clear","Cwf","cache","currentSize","A1","H8","W","steps","S","Position","boardOrFen","arguments","ep","halfMoveClock","score","myHash","boardHash","fen","subs","trim","split","num","parseInt","is_integer_default","j","Error","used","applyHashes","hashParam","hashBoard","rights","step","t","tp","includes","ret","slice","hashNullMove","prev","move","promo","o","op","helper","newHashes","hashMove","_this","newHash","newBoardHash","applyHash","applyBoardHash","moves","genMoves","el","done","nextPos","nextMoves","nextEl","mySteps","pawnSteps","pawn","kingSquare","indexOf","bq","rq","BQ","RQ","spaces","_callee","depth","guess","bound","f","beta","pieces","regenerator_default","wrap","_context","lower","MAX_SCORE","upper","SEARCH_MARGIN","getPieces","alphaBeta","new","gotMove","timeout","abrupt","stop","L","E","H","boardTable","count","add","pull","Killer","origins","callBack","tpHits","searched","timeLimit","Date","now","forMoves","pv","callback","inStalemate","inCheck","takenPiece","newPieces","assign_default","endgame","insufficientMaterial","alpha","root","stalemate","entry","fail","handleMove","nextScore","nullMove","AI","_ref2","asyncToGenerator_default","mark","_callee2","history","_move3","_entry","newScore","deepestEntry","time","maxDepth","logs","betweenDepths","_context2","from_default","mtdf","sent","_x5","_x6","apply","defaultConfig","startPos","searchTime","Home_game","Engine","options","config","aiInfo","configure","setPos","fullMove","isNaN","position","constructor","valid","last","pop","inCheckMate","fiftyMoves","inThreefoldRepetition","inStaleMate","insuffMaterial","game","generator","showMove","winner","aimove","Home","components","promotion","thinking","startedThinking","winningEntry","invalidFen","validFen","invalidStartPos","watch","game.position.board","game.position.turn","setTimeout","_ref","aiMove","ctx","$refs","canvas","getContext","lineWidth","strokeStyle","shadowOffsetX","shadowBlur","shadowColor","drawLine","promise_default","resolve","reject","_x","finally","game.aiInfo","handler","deep","mounted","_this2","index","$forceUpdate","_x2","_x3","_x4","onDragStart","onDrop","target","createBoard","window","onresize","ontouchmove","event","preventDefault","methods","from","to","fromX","getX","fromY","getY","moveTo","toX","toY","lineTo","stroke","canvasWidth","canvasHeight","offsetHeight","textX","textY","thinkProgress","getTime","windowHeight","$","height","windowWidth","min","chessboard_default","draggable","destroyBoard","destroy","handlePromotion","cancel","undoMove","restart","console","log","setStartPos","resetStartPos","setTime","components_Home","_e","_v","ref","touch-action","boardContainer","top","_s","visibility","type","_m","href","role","src_components_Home","Home_normalizeComponent","Vue","use","Router","router","routes","path","component","VueWorker","jquery","productionTip","App","template","./bB.png","./bK.png","./bN.png","./bP.png","./bQ.png","./bR.png","./wB.png","./wK.png","./wN.png","./wP.png","./wQ.png","./wR.png","webpackAsyncContext","req","ids","Promise","Object","module","exports"],"mappings":"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","file":"static/js/app.9e332024fa493807782a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6b03bc40\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6b03bc40\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6b03bc40\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\nhtml, body {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  background-color: #0f0f0f;\n  color: #f2f2f2;\n  width: 100%;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","/**\n * Type and constants declarations.\n * @flow\n */\n\nexport const WHITE = 0;\nexport const BLACK = 1;\nexport const PIECES = [\n  'P', 'N', 'B', 'R', 'Q', 'K',\n  'p', 'n', 'b', 'r', 'q', 'k'\n];\n\nexport type Color = 0 | 1;\n// ' ' means no piece\nexport type Piece = 'P' | 'N' | 'B' | 'R' | 'Q' | 'K' |\n                    'p' | 'n' | 'b' | 'r' | 'q' | 'k';\n// [white, black], piece objects may be any order\n// must have no empty elements\nexport type Board = Array<Piece | null>;\n\nexport type Move = [number, number]; // [from, to]\nexport type CR = [boolean, boolean]; // castling rights [queenside, kingside]\n\nexport type Hash = [number, number];\nexport type History = Array<{fen: string, move: Move}>;\n\n// used for testing\nexport type PieceObj = {| pos: number, piece: Piece |};\nexport type Pieces = Array<PieceObj>;\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/declarations.js","<template>\n  <div class=\"promotion\" :style=\"{\n    left: offset + 'px',\n    width: width + 'px',\n  }\">\n    <img v-for=\"(img, piece) in urls\" :key=\"img\"\n      :src=\"img\" @click=\"$emit('done', piece)\"\n      :style=\"{ width: width + 'px', }\"\n    >\n  </div>\n</template>\n\n<script>\nimport { WHITE } from '@/jackfish/declarations';\n\n// piece img urls\nconst imgs = {\n  white: {\n    Q: 'wQ',\n    N: 'wN',\n    R: 'wR',\n    B: 'wB',\n  },\n  black: {\n    q: 'bQ',\n    n: 'bN',\n    r: 'bR',\n    b: 'bB',\n  }\n};\n\nfor (const key in imgs.white) {\n  import('../assets/img/chesspieces/wikipedia/' + imgs.white[key] + '.png').then(val => {\n    imgs.white[key] = val;\n  })\n}\nfor (const key in imgs.black) {\n  import('../assets/img/chesspieces/wikipedia/' + imgs.black[key] + '.png').then(val => {\n    imgs.black[key] = val;\n  })\n}\n\nexport default {\n  name: 'Promotion',\n  data() {\n    return {\n    };\n  },\n  props: ['pos', 'color', 'board'],\n  computed: {\n    file() {\n      return this.pos % 8; // 0 - 7\n    },\n    // piece img urls\n    urls() {\n      if (this.color === WHITE) return imgs.white;\n      else return imgs.black;\n    },\n    width() {\n      return this.board.offsetWidth / 8;\n    },\n    offset() {\n      return this.board.getBoundingClientRect().x +\n        (this.file - 1) * this.width;\n    }\n  },\n};\n</script>\n\n<style scoped>\n.promotion {\n  position: absolute;\n  background-color: white;\n  box-shadow: 1px 1px 5px;\n  z-index: 100;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Promotion.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"promotion\",style:({\n  left: _vm.offset + 'px',\n  width: _vm.width + 'px',\n})},_vm._l((_vm.urls),function(img,piece){return _c('img',{key:img,style:({ width: _vm.width + 'px', }),attrs:{\"src\":img},on:{\"click\":function($event){return _vm.$emit('done', piece)}}})}),0)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-46a32d55\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Promotion.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-46a32d55\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Promotion.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Promotion.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Promotion.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-46a32d55\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Promotion.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-46a32d55\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Promotion.vue\n// module id = null\n// module chunks = ","/**\n * Helper functions.\n * @flow\n */\n\nimport { WHITE, BLACK } from './declarations';\nimport type { Piece, Color, Board } from './declarations';\n\nexport function isWhite(piece: Piece): boolean {\n  return piece.charAt(0) === piece.charAt(0).toUpperCase();\n}\n\nexport function isColor(piece: Piece, color: Color): boolean {\n  return color === WHITE ? isWhite(piece) : !isWhite(piece);\n}\n\nexport function sameColor(p1: Piece, p2: Piece): boolean {\n  return isWhite(p1) === isWhite(p2);\n}\n\n// Returns the other color.\nexport function next(c: Color): Color {\n  return c === WHITE ? BLACK : WHITE;\n}\n\nexport function rowDif(p1: number, p2: number): number {\n  return Math.abs(Math.floor(p1 / 8) - Math.floor(p2 / 8));\n}\n\nexport function colDif(p1: number, p2: number): number {\n  return Math.abs(p1 % 8 - p2 % 8);\n}\n\nexport function rank(p: number): number {\n  return 8 - Math.floor(p / 8)\n}\n\n/**\n * Parses a position on form 'f5'. If it's already a number, returns the\n * number.\n * @return The corresponding number, or NaN if the string was invalid.\n */\nexport function parse(s: string | number) {\n  if (typeof s === 'number') return s;\n  if (s.length !== 2) return NaN;\n\n  s = s.toLowerCase();\n  const file = s.charCodeAt(0); // char representing file\n  const rank = s.charCodeAt(1); // char representing rank\n  const a = 'a'.charCodeAt(0);\n  const h = 'h'.charCodeAt(0);\n  if (!(file >= a && file <= h && rank >= 49 && rank <= 56)) {\n    return NaN;\n  }\n\n  // 97 is ascii for 'a' and 49 for '1'\n  return file - 97 + 56 - (rank - 49) * 8;\n}\n\n/**\n * Parses a position on number form to from 'f5'.\n * Assumes pos >= 0 && pos <= 63.\n * @return The string, or null if the number was invalid.\n */\nexport function squareToString(pos: number): string {\n  const file: string = String.fromCharCode(pos % 8 + 97);\n  const r: string = rank(pos).toString();\n  return file.concat(r);\n}\n\nexport function equalBoards (b1: Board, b2: Board) {\n  for (let i = 0; i < 64; i++) {\n    if (b1[i] !== b2[i]) return false;\n  }\n  return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/helpers.js","/**\n * Evaluation of a position.\n * @flow\n */\n\nimport { isWhite } from './helpers';\n\nimport type { Board, Piece } from './declarations';\n\n// Piece values.\n// King value is set to a very high value to easily detect when king is taken,\n// and thereby detecting checkmate, and to always avoid it if possible.\nexport const PIECE = { P: 100, N: 320, B: 330, R: 500, Q: 900, K: 30000 };\n\n// Piece-square tables.\n// Index is index of position on the board for white, and for the board\n// flipped for black.\n// Taken from https://chessprogramming.wikispaces.com/Simplified%20evaluation%20function\n\n/* eslint-disable */\nexport const pstRaw = {\n  // pawn\n  P: [\n     0,  0,  0,  0,  0,  0,  0,  0,\n    50, 50, 50, 50, 50, 50, 50, 50,\n    10, 10, 20, 30, 30, 20, 10, 10,\n     5,  5, 10, 25, 25, 10,  5,  5,\n     0,  0,  0, 20, 20,  0,  0,  0,\n     5, -5,-10,  0,  0,-10, -5,  5,\n     5, 10, 10,-20,-20, 10, 10,  5,\n     0,  0,  0,  0,  0,  0,  0,  0\n  ],\n  // knight\n  N: [\n    -50,-40,-30,-30,-30,-30,-40,-50,\n    -40,-20,  0,  0,  0,  0,-20,-40,\n    -30,  0, 10, 15, 15, 10,  0,-30,\n    -30,  5, 15, 20, 20, 15,  5,-30,\n    -30,  0, 15, 20, 20, 15,  0,-30,\n    -30,  5, 10, 15, 15, 10,  5,-30,\n    -40,-20,  0,  5,  5,  0,-20,-40,\n    -50,-40,-30,-30,-30,-30,-40,-50,\n  ],\n  // bishop\n  B: [\n    -20,-10,-10,-10,-10,-10,-10,-20,\n    -10,  0,  0,  0,  0,  0,  0,-10,\n    -10,  0,  5, 10, 10,  5,  0,-10,\n    -10,  5,  5, 10, 10,  5,  5,-10,\n    -10,  0, 10, 10, 10, 10,  0,-10,\n    -10, 10, 10, 10, 10, 10, 10,-10,\n    -10,  5,  0,  0,  0,  0,  5,-10,\n    -20,-10,-10,-10,-10,-10,-10,-20,\n  ],\n  // rook\n  R: [\n     0,  0,  0,  0,  0,  0,  0,  0,\n     5, 10, 10, 10, 10, 10, 10,  5,\n    -5,  0,  0,  0,  0,  0,  0, -5,\n    -5,  0,  0,  0,  0,  0,  0, -5,\n    -5,  0,  0,  0,  0,  0,  0, -5,\n    -5,  0,  0,  0,  0,  0,  0, -5,\n    -5,  0,  0,  0,  0,  0,  0, -5,\n     0,  0,  0,  5,  5,  0,  0,  0,\n  ],\n  // queen\n  Q: [\n    -20,-10,-10, -5, -5,-10,-10,-20,\n    -10,  0,  0,  0,  0,  0,  0,-10,\n    -10,  0,  5,  5,  5,  5,  0,-10,\n     -5,  0,  5,  5,  5,  5,  0, -5,\n      0,  0,  5,  5,  5,  5,  0, -5,\n    -10,  5,  5,  5,  5,  5,  0,-10,\n    -10,  0,  5,  0,  0,  0,  0,-10,\n    -20,-10,-10, -5, -5,-10,-10,-20,\n  ],\n  // king\n  K: [\n    -30,-40,-40,-50,-50,-40,-40,-30,\n    -30,-40,-40,-50,-50,-40,-40,-30,\n    -30,-40,-40,-50,-50,-40,-40,-30,\n    -30,-40,-40,-50,-50,-40,-40,-30,\n    -20,-30,-30,-40,-40,-30,-30,-20,\n    -10,-20,-20,-20,-20,-20,-20,-10,\n     20, 20,  0,  0,  0,  0, 20, 20,\n     20, 30, 10,  0,  0, 10, 30, 20\n  ]\n};\n/* eslint-enable */\n\n// Join psts with piece values into a final pst, and add mirrored tables\n// for black pieces\ntype Pst = {\n  [piece: Piece]: Array<number>\n};\n\nexport const pst: Pst = {};\nfor (const key in pstRaw) {\n  const bKey: Piece = (key.toLowerCase(): any); // corresponding black piece key\n  pst[(key: any)] = [];\n  pst[bKey] = [];\n  pstRaw[key].forEach((e, i) => {\n    pst[(key: any)].push(e + PIECE[key])\n    pst[bKey][56 - i + 2 * (i % 8)] = e + PIECE[key];\n  });\n}\n\n/**\n * Gives the board value for white (negate for black's).\n */\nexport default function evaluate(board: Board): number {\n  let value = 0;\n  for (let i = 0; i < 64; i++) {\n    if (board[i]) {\n      const piece: Piece = board[i];\n      if (isWhite(piece)) value += pst[piece][i];\n      else value -= pst[piece][i];\n    }\n  }\n  return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/evaluation.js","/**\n * Transposition table stuff\n * @flow\n */\n\nimport Position from './Position';\nimport { PIECES, WHITE } from './declarations';\nimport type { Piece } from './declarations';\n\nconst Random = require('random-js');\n// 27102 is just a random number\nconst random = new Random(Random.engines.mt19937().seed(27102));\n\n/**\n * Zobrist hashing for positions. Hashed in two parts, low and high.\n *\n * Low is used as key in Map and high is stored at the key\n * together with a value for that position. This is because of\n * javascript's number type that can only store integers up to 52 signed\n * bits and the fact that bitwise operators in javascript only operates on\n * 32 bit signed integers.\n */\n\n// get a random 32 bit integer\nexport function rand() {\n  return random.integer(-Math.pow(2, 31), Math.pow(2, 31) - 1);\n}\n\n// Makes a hash tuple with low and high\nexport const randoms = () => [rand(), rand()];\n\n// initialize hashes array\ntype Hashes = {\n  [index: Piece | 'wc' | 'bc' | 'turn' | 'epFile' | 'kp']: any\n}\nconst hashes: Hashes = {};\nPIECES.forEach(p => {\n  hashes[p] = [];\n  for (let i = 0; i < 64; i++) {\n    hashes[p].push(randoms()); // [low, high]\n  }\n\n  hashes.turn = randoms(); // apply when white's turn\n\n  hashes.wc = [randoms(), randoms()]; // [queenside, kingside]\n  hashes.bc = [randoms(), randoms()];\n\n  hashes.epFile = [];\n  for (let i = 0; i < 8; i++) {\n    hashes.epFile.push(randoms()); // [A, B, C...]\n  }\n\n  hashes.kp = [];\n  const kps = [3, 5, 59, 61];\n  for (let i = 0; i < kps.length; i++) {\n    hashes.kp[kps[i]] = randoms();\n  }\n});\n\nexport { hashes };\n\n// Hash the position, returning hash as [low, high]\nexport function hash(pos: Position): [number, number] {\n  const myHash = [0, 0]; // low, high\n\n  // apply [low, high] to low and high\n  const applyHashes = (hashParam: [number, number]) => {\n    myHash[0] ^= hashParam[0];\n    myHash[1] ^= hashParam[1];\n  }\n\n  if (pos.turn === WHITE) applyHashes(hashes.turn);\n  for (let i = 0; i < 64; i++) {\n    const p = pos.board[i];\n    if (p) applyHashes(hashes[p][i]);\n  }\n  if (pos.wc[0]) applyHashes(hashes.wc[0]);\n  if (pos.wc[1]) applyHashes(hashes.wc[1]);\n  if (pos.bc[0]) applyHashes(hashes.bc[0]);\n  if (pos.bc[1]) applyHashes(hashes.bc[1]);\n  if (pos.ep !== -1) applyHashes(hashes.epFile[pos.ep % 8]);\n  if (pos.kp !== -1) applyHashes(hashes.kp[pos.kp]);\n\n  return myHash;\n}\n\n/** Transposition table */\n\n// LRU cache, first in first out, size > 0\nexport class Lru<Entry = any> {\n  map: Map<number, Array<Entry>> = new Map();\n  // max number of keys in map (not max number of entries since there can be\n  // many entries in an array at one key)\n  maxSize: number;\n\n  constructor(maxSize: number) {\n    this.maxSize = maxSize;\n  }\n\n  size() {\n    return this.map.size;\n  }\n\n  /** Returns entry at hash, or undefined if there is none. */\n  get(hash: [number, number]): ?Entry {\n    const low = hash[0];\n    const high = hash[1];\n    const arr = this.map.get(low);\n\n    if (arr !== undefined) {\n      // set to last recently used\n      this.map.delete(low);\n      this.map.set(low, arr);\n\n      return arr[high];\n    }\n    return undefined;\n  }\n\n  /** Add an entry to the cache, returns the added entry. */\n  add(hash: [number, number], val: Entry): Entry {\n    const low = hash[0];\n    const high = hash[1];\n    const arr = this.map.get(low);\n\n    if (arr !== undefined) {\n      arr[high] = val;\n      this.map.delete(low);\n      this.map.set(low, arr);\n    } else {\n      const arr = [];\n      arr[high] = val;\n      this.map.set(low, arr);\n    }\n\n    if (this.map.size > this.maxSize) {\n      // $FlowFixMe\n      this.map.delete(this.map.keys().next().value);\n    }\n\n    return val;\n  }\n\n  clear() {\n    this.map.clear();\n  }\n\n  setSize(maxSize: number) {\n    this.maxSize = maxSize;\n  }\n}\n\n// A simpler clear-when-full cache,\n// has a max size but just resets when it's reached\nexport class Cwf<Entry = any> {\n  cache: Array<Array<Entry>> = [];\n  maxSize: number;\n  currentSize: number = 0;\n\n  constructor(size: number) {\n    this.maxSize = size;\n  }\n\n  size(): number {\n    return this.currentSize;\n  }\n  setSize(size: number): void {\n    this.maxSize = size;\n  }\n\n  /** Returns entry at hash or undefined if there is none. */\n  get(hash: [number, number]): ?Entry {\n    const low = hash[0];\n    const high = hash[1];\n\n    if (this.cache[low] !== undefined) return this.cache[low][high];\n    else return undefined;\n  }\n\n  /** Add an entry to the cache. Assumes it does not already exist */\n  add(hash: [number, number], val: Entry): Entry {\n    const low = hash[0];\n    const high = hash[1];\n\n    // if passed size limit, clear cache and start over\n    // (might clear one too early)\n    if (this.currentSize === this.maxSize) {\n      this.cache = [];\n      this.currentSize = 0;\n    }\n\n    if (this.cache[low] !== undefined) {\n      if (this.cache[low][high] === undefined) this.currentSize++;\n      this.cache[low][high] = val;\n    } else {\n      this.cache[low] = [];\n      this.cache[low][high] = val;\n      this.currentSize++;\n    }\n    return val;\n  }\n  clear() {\n    this.cache = [];\n    this.currentSize = 0;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/tp.js","/**\n * Position module.\n * @flow\n */\n\nimport { isColor, sameColor, next, colDif, rowDif,\n  parse, squareToString } from './helpers';\nimport evaluate, { pst } from './evaluation';\nimport { WHITE, BLACK } from './declarations';\nimport { hash, hashes } from './tp';\n\nimport type { Color, Board, Piece, Move, CR, Hash } from './declarations';\n\n// some squares\nexport const A1 = 56;\nexport const H1 = 63;\nexport const A8 = 0;\nexport const H8 = 7;\n\n// directions\nconst N = -8; // north\nconst E = 1; // east\nconst S = 8; // south\nconst W = -1; // west\n\n/* eslint-disable */\n// possible steps for different pieces\nconst steps = {};\nsteps.P = [N, 2*N, N+W, N+E]; // p[0] = white, p[1] = black\nsteps.N = [2*N+W, 2*N+E, 2*W+N, 2*W+S, 2*S+E, 2*S+W, 2*E+N, 2*E+S];\nsteps.B = [N+W, N+E, S+W, S+E];\nsteps.R = [N, E, S, W];\nsteps.Q = [N, N+E, E, S+E, S, S+W, W, N+W];\nsteps.K = [N, N+E, E, S+E, S, S+W, W, N+W];\n\n// add for black pieces\nfor (const key in steps) {\n  steps[key.toLowerCase()] = steps[key];\n}\n// black pawns can only move opposite direction\nsteps.p = [];\nfor (let i = 0; i < steps.P.length; i++) steps.p.push(-steps.P[i]);\n\n/* eslint-enable */\n\n/**\n * A complete position of a chess game.\n */\nexport default class Position {\n  board: Board;\n  turn: Color;\n  wc: CR;\n  bc: CR;\n  ep: number;\n  kp: number;\n  halfMoveClock: number;\n\n  score: number;\n  hash: Hash;\n  boardHash: Hash;\n\n  prev: Position | void;\n\n  constructor(\n    boardOrFen: Board | string,\n    turn: Color = WHITE,\n    wc: CR = [true, true], // white castling rights\n    bc: CR = [true, true], // black...\n    ep: number = -1, // -1 if there is none\n    kp: number = -1, // -1 if there is none\n    halfMoveClock: number = 0, // defaults to 0\n\n    // Score for color to move. If none is provided, calculates it from scratch.\n    score?: number,\n    myHash?: Hash,\n    boardHash?: Hash,\n  ) {\n    // if we get a fen string: assumes it's a valid fen string\n    if (typeof boardOrFen === 'string') {\n      const fen = boardOrFen;\n      this.board = [];\n      this.wc = [false, false];\n      this.bc = [false, false];\n      this.ep = -1;\n      this.kp = -1;\n\n      const subs = fen.trim().split(/ +/); // get substrings\n\n      let pos = 0; // current board position (square)\n      let i = 0; // index of string\n      // The board array is indexed the same way as FEN notation.\n      while (i < subs[0].length) {\n        let c = subs[0].charAt(i); // currently parsed char\n        const num = parseInt(c);\n        if (Number.isInteger(num)) {\n          for (let j = 0; j < num; j++) {\n            this.board[pos + j] = null;\n          }\n          pos += num;\n        } else {\n          // Cast to piece when we know it is one.\n          c = ((c: any): Piece)\n          this.board[pos] = c;\n          pos++;\n        }\n        i++;\n        if (pos >= 64) break; // should not be able to be bigger than 64\n        else if (pos % 8 === 0) {\n          i++;\n        }\n      }\n\n      switch (subs[1]) {\n        case 'w': this.turn = WHITE; break;\n        case 'b': this.turn = BLACK; break;\n        default: throw new Error('Invalid fen string');\n      }\n\n      if (subs[2] !== '-') {\n        const used = [];\n        for (let i = 0; i < subs[2].length; i++) {\n          const c = subs[2].charAt(i);\n          switch (c) {\n            case 'Q': this.wc[0] = true; break;\n            case 'K': this.wc[1] = true; break;\n            case 'q': this.bc[1] = true; break;\n            case 'k': this.bc[0] = true; break;\n            default: throw new Error('Invalid fen string');\n          }\n          used.push(c);\n        }\n      }\n\n      if (subs[3] !== '-') this.ep = parse(subs[3]);\n\n      this.halfMoveClock = parseInt(subs[4]);\n    } else {\n      // else just copy all the parameters to fields.\n      this.board = boardOrFen;\n      this.turn = turn;\n      this.wc = wc;\n      this.bc = bc;\n      this.ep = ep;\n      this.kp = kp;\n      this.halfMoveClock = halfMoveClock;\n    }\n\n    if (score !== undefined) this.score = score;\n    else {\n      this.score = this.turn === WHITE\n        ? evaluate(this.board) : -evaluate(this.board);\n    }\n\n    if (myHash !== undefined) this.hash = myHash;\n    else this.hash = hash((this: any));\n    if (boardHash !== undefined) this.boardHash = boardHash;\n    else this.boardHash = this.hashBoard();\n  }\n\n  /**\n   * Returns possible moves for color, including moves that result in king-take\n   * and castles invalid because of threatened squares or check. For pawn\n   * promotions, it will only generate one move without the promotion piece.\n   * You must later add the promotion piece for the move to be valid.\n   * @param [color=this.turn] The color to look for moves for.\n   */\n  *genMoves(color?: Color = this.turn): Generator<Move, void, void> {\n    for (let i = 0; i < this.board.length; i++) {\n      const piece = this.board[i];\n      if (piece === null || !isColor(piece, color)) continue;\n\n      // check for castling\n      if (piece.toUpperCase() === 'K') {\n        const rights = color === WHITE ? this.wc : this.bc;\n        if (rights[0] && this.board[i - 1] === null &&\n          this.board[i - 2] === null) yield ([i, i - 2]: Move);\n        if (rights[1] && this.board[i + 1] === null &&\n          this.board[i + 2] === null) yield ([i, i + 2]: Move);\n      }\n\n      for (let j = 0; j < steps[piece].length; j++) {\n        const step = steps[piece][j];\n        // if step is two steps, it must be a pawn\n        if ((step === 2 * N && i < A1 - 8) ||\n          (step === 2 * S && i > H8 + 8)) continue;\n\n        let t = i + step; // target square\n\n        // keep within bounds of board\n        while (t >= 0 && t <= 63 && colDif(t, t - step) < 6) {\n          const tp = this.board[t]; // target piece (or null)\n\n          // pawns get special treatment\n          if (piece.toUpperCase() === 'P') {\n            if (colDif(i, t) === 0 && tp !== null) break;\n            if (rowDif(i, t) === 2 && this.board[i + step / 2] !== null) break;\n            if (colDif(i, t) === 1 && t !== this.ep &&\n              (tp === null || sameColor(tp, piece))) break;\n          } else if (tp !== null) {\n            if (!sameColor(tp, piece)) {\n              yield ([i, t]: Move);\n            }\n            break;\n          }\n\n          yield ([i, t]: Move);\n          if ('KkNnPp'.includes(piece)) break;\n          t += step;\n        }\n      }\n    }\n  }\n\n  /**\n   * Makes a nullmove, i.e. switches turn, resets en passant and negates score.\n   */\n  nullMove(): Position {\n    // copying board with slice, works because it's shallow\n    const ret = new Position(this.board.slice(), next(this.turn), this.wc, this.bc,\n      -1, -1, this.halfMoveClock + 1,\n      -this.score, this.hashNullMove(), this.boardHash);\n    ret.prev = this;\n    return ret;\n  }\n\n  /**\n   * Makes the move and returns the new position. Does not alter this\n   * position. Assumes that the move is valid.\n   * @param move  The move\n   * @param promo If there is a promotion of a pawn, this is the piece to\n   *              replace it with. Default to Queen.\n   * @param score Optional to pass score to avoid calculating it twice\n   * @return      The new position.\n   */\n  move(move: Move, promo?: Piece, score?: number): Position {\n    const o = move[0]; // origin square\n    const t = move[1]; // target square\n    // it's assumed that there is a piece at the origin position,\n    // toUpperCase() makes it generic because color doesn't matter\n    const op: Piece = (this.board[o]: any);\n    if (!promo) {\n      if (this.turn === WHITE) promo = 'Q'; // default promotion piece\n      else promo = 'q';\n    }\n\n    const board = this.board.slice(); // copy board\n    let wc: CR = (this.wc.slice(): any); // copy castling rights\n    let bc: CR = (this.bc.slice(): any);\n    let ep = -1; // default\n    let kp = -1;\n    // negate score so it's for the other side\n    if (score === undefined) score = -(this.score + this.value(move, promo));\n\n    let halfMoveClock;\n    // will also be reset at pawn take\n    if (board[t]) halfMoveClock = 0;\n    else halfMoveClock = this.halfMoveClock + 1;\n\n    // make the move\n    board[t] = board[o];\n    board[o] = null;\n\n    // castle\n    if (op === 'K') {\n      wc = [false, false];\n      if (Math.abs(t - o) === 2) {\n        kp = (o + t) / 2;\n        board[kp] = 'R';\n        board[t < o ? A1 : H1] = null;\n      }\n    } else if (op === 'k') {\n      bc = [false, false];\n      if (Math.abs(t - o) === 2) {\n        kp = (o + t) / 2;\n        board[kp] = 'r';\n        board[t < o ? A8 : H8] = null;\n      }\n    } else {\n      // set castling rights\n      const helper = (p) => {\n        switch (p) {\n          case A1: wc[0] = false; break;\n          case H1: wc[1] = false; break;\n          case A8: bc[0] = false; break;\n          case H8: bc[1] = false; break;\n          default: break;\n        }\n      }\n      helper(o);\n      helper(t);\n\n      // double move, en passant and pawn promotion\n      if (op === 'P') { // white\n        halfMoveClock = 0;\n\n        if (t - o === -16) ep = (t + o) / 2;\n        else if (t === this.ep) board[t + 8] = null;\n        else if (t <= H8) board[t] = (promo: any); // assume it's defined\n      } else if (op === 'p') { // black\n        halfMoveClock = 0;\n\n        if (t - o === 16) ep = (t + o) / 2;\n        else if (t === this.ep) board[t - 8] = null;\n        else if (t >= A1) board[t] = (promo: any);\n      }\n    }\n\n    const newHashes = this.hashMove(move, promo)\n\n    const ret = new Position(board, next(this.turn), wc, bc, ep, kp,\n      halfMoveClock, score, newHashes[0], newHashes[1]);\n    ret.prev = this;\n    return ret;\n  }\n\n  /**\n   * Returns the value (change of position score) of a move. Assumes it's valid.\n   */\n  value(move: Move, promo?: Piece): number {\n    const o = move[0];\n    const t = move[1];\n    const op: Piece = (this.board[o]: any);\n    let tp: Piece = (this.board[t]: any);\n\n    // invalid castling detection, returns MAX_SAFE_INTEGER if last move's\n    // castle was invalid (if king is threatened on any of the squares\n    // it moves over)\n    if (this.kp !== -1 && Math.abs(t - this.kp) < 2) return 30000;\n\n    let score = pst[op][t] - pst[op][o];\n    // capture\n    if (tp) score += pst[tp][t];\n\n    // castling\n    if (op === 'K' && Math.abs(t - o) === 2) {\n      score += pst['R'][(t + o) / 2];\n      score -= t < o ? pst['R'][A1] : pst['R'][H1];\n    } else if (op === 'k' && Math.abs(t - o) === 2) {\n      score += pst['r'][(t + o) / 2];\n      score -= t < o ? pst['r'][A8] : pst['r'][H8];\n    }\n\n    // pawn stuff\n    if (op === 'P') {\n      if (t <= H8) score += pst[promo || 'Q'][t] - pst[op][t];\n      else if (t === this.ep) {\n        tp = (this.board[t + 8]: any);\n        score += pst[tp][t + 8];\n      }\n    } else if (op === 'p') {\n      if (t >= A1) score += pst[promo || 'q'][t] - pst[op][t];\n      else if (t === this.ep) {\n        tp = (this.board[t - 8]: any);\n        score += pst[tp][t - 8];\n      }\n    }\n    return score;\n  }\n\n  /** Returns the resulting hashes ([posHash, boardHash]) from a move\n      (position hash and board hash). Assumes it's a valid move. */\n  hashMove(move: Move, promo?: Piece): [Hash, Hash] {\n    const o = move[0];\n    const t = move[1];\n    const op: Piece = (this.board[o]: any);\n    let tp = this.board[t];\n\n    const newHash: Hash = (this.hash.slice(): any); // copy\n    const newBoardHash: Hash = (this.boardHash.slice(): any);\n\n    const applyHash = (hashParam: Hash) => {\n      newHash[0] ^= hashParam[0];\n      newHash[1] ^= hashParam[1];\n    }\n    const applyBoardHash = (hashParam: Hash) => {\n      newBoardHash[0] ^= hashParam[0];\n      newBoardHash[1] ^= hashParam[1];\n    }\n\n    // switch turn\n    applyHash(hashes.turn);\n\n    // if this position has an en passant or king passant, unhash it\n    if (this.ep !== -1) applyHash(hashes.epFile[this.ep % 8]);\n    if (this.kp !== -1) applyHash(hashes.kp[this.kp]);\n\n    applyHash(hashes[op][o]);\n    applyHash(hashes[op][t]);\n    applyBoardHash(hashes[op][o]);\n    applyBoardHash(hashes[op][t]);\n    if (tp) {\n      applyHash(hashes[tp][t]);\n      applyBoardHash(hashes[tp][t]);\n    }\n\n    // castling\n    if (op === 'K' && Math.abs(t - o) === 2) {\n      const kp = (t + o) / 2;\n      applyHash(hashes.wc[0]);\n      applyHash(hashes.wc[1]);\n      applyHash(hashes.kp[kp]);\n\n      applyHash(hashes['R'][kp]);\n      applyBoardHash(hashes['R'][kp]);\n      if (t < o) {\n        applyHash(hashes['R'][A1]);\n        applyBoardHash(hashes['R'][A1]);\n      } else {\n        applyHash(hashes['R'][H1]);\n        applyBoardHash(hashes['R'][H1]);\n      }\n    } else if (op === 'k' && Math.abs(t - o) === 2) {\n      const kp = (t + o) / 2;\n      applyHash(hashes.bc[0]);\n      applyHash(hashes.bc[1]);\n      applyHash(hashes.kp[kp]);\n\n      applyHash(hashes['r'][kp]);\n      applyBoardHash(hashes['r'][kp]);\n      if (t < o) {\n        applyHash(hashes['r'][A8]);\n        applyBoardHash(hashes['r'][A8]);\n      } else {\n        applyHash(hashes['r'][H8]);\n        applyBoardHash(hashes['r'][H8]);\n      }\n    } else {\n      const helper = (p) => {\n        switch (p) {\n          case A1: if (this.wc[0]) applyHash(hashes.wc[0]); break;\n          case H1: if (this.wc[1]) applyHash(hashes.wc[1]); break;\n          case A8: if (this.bc[0]) applyHash(hashes.bc[0]); break;\n          case H8: if (this.bc[1]) applyHash(hashes.bc[1]); break;\n          default: break;\n        }\n      }\n      helper(o);\n      helper(t);\n\n      // pawn stuff\n      if (op === 'P') {\n        // hash en passant\n        if (t - o === -16) applyHash(hashes.epFile[((t + o) / 2) % 8]);\n        else if (t === this.ep) {\n          tp = (this.board[t + 8]: any);\n          applyHash(hashes[tp][t + 8]);\n          applyBoardHash(hashes[tp][t + 8]);\n        } else if (t <= H8) {\n          applyHash(hashes[op][t]);\n          applyHash(hashes[promo || 'Q'][t]);\n          applyBoardHash(hashes[op][t]);\n          applyBoardHash(hashes[promo || 'Q'][t]);\n        }\n      } else if (op === 'p') {\n        if (t - o === 16) applyHash(hashes.epFile[((t + o) / 2) % 8]);\n        else if (t === this.ep) {\n          tp = (this.board[t - 8]: any);\n          applyHash(hashes[tp][t - 8]);\n          applyBoardHash(hashes[tp][t - 8]);\n        } else if (t >= A1) {\n          applyHash(hashes[op][t]);\n          applyHash(hashes[promo || 'q'][t]);\n          applyBoardHash(hashes[op][t]);\n          applyBoardHash(hashes[promo || 'q'][t]);\n        }\n      }\n    }\n    return [newHash, newBoardHash];\n  }\n\n  hashNullMove(): Hash {\n    const newHash: Hash = (this.hash.slice(): any); // copy old hash\n    const applyHash = (hashParam: Hash) => {\n      newHash[0] ^= hashParam[0];\n      newHash[1] ^= hashParam[1];\n    }\n\n    // if this position has an en passant or king passant, unhash it\n    if (this.ep !== -1) applyHash(hashes.epFile[this.ep % 8]);\n    if (this.kp !== -1) applyHash(hashes.kp[this.kp]);\n\n    applyHash(hashes.turn);\n\n    return newHash;\n  }\n\n  hashBoard(): Hash {\n    const hash: Hash = [0, 0];\n\n    for (let i = 0; i < 64; i++) {\n      const p = this.board[i];\n      if (p) {\n        // apply hash\n        hash[0] ^= hashes[p][i][0];\n        hash[1] ^= hashes[p][i][1];\n      }\n    }\n    return hash;\n  }\n\n  /**\n   * Checks if a move is valid.\n   */\n  valid(move: Move): boolean {\n    const moves = this.genMoves(); // generator\n    let el = moves.next();\n    while (!el.done) {\n      if (move[0] === el.value[0] && move[1] === el.value[1]) {\n        const nextPos = this.move(move);\n        const nextMoves = nextPos.genMoves();\n        let nextEl = nextMoves.next();\n        while (!nextEl.done) {\n          // check if the move was an invalid castle\n          if (nextPos.kp !== -1 && Math.abs(nextEl.value[1] - nextPos.kp) < 2) {\n            return false;\n          }\n          // check if the move results in king being taken\n          const tp = nextPos.board[nextEl.value[1]];\n          if (tp !== null && 'Kk'.includes(tp)) return false;\n          nextEl = nextMoves.next();\n        }\n        // if it passed all the tests, return true\n        return true;\n      }\n      el = moves.next();\n    }\n    return false;\n  }\n\n  /** Returns true if color is in check. If square is provided,\n      checks if that square is threatened. */\n  inCheck(color: Color = this.turn): boolean {\n    let mySteps; // steps for different pieces\n    let pawnSteps;\n    let pawn;\n    let kingSquare;\n    if (color === WHITE) {\n      // square position of king\n      kingSquare = this.board.indexOf('K');\n\n      mySteps = {\n        'bq': steps.B,\n        'rq': steps.R,\n        'n': steps.N,\n      };\n      pawn = 'p';\n      pawnSteps = [S + W, S + E];\n    } else {\n      kingSquare = this.board.indexOf('k');\n\n      mySteps = {\n        'BQ': steps.B,\n        'RQ': steps.R,\n        'N': steps.N,\n      }\n      pawn = 'P';\n      pawnSteps = [N + W, N + E];\n    }\n\n    // search all steps for all pieces\n    for (const key in mySteps) {\n      for (let i = 0; i < mySteps[key].length; i++) {\n        let t = kingSquare + mySteps[key][i];\n        while (t >= 0 && t <= 63 && colDif(t, t - mySteps[key][i]) < 6) {\n          if (this.board[t]) {\n            if (key.includes(this.board[t])) return true;\n            // pawns get special treatment\n            if (this.board[t] === pawn &&\n              (kingSquare === t + pawnSteps[0] ||\n              kingSquare === t + pawnSteps[1])) {\n              return true;\n            }\n            break;\n          }\n\n          if ('Nn'.includes(key)) break;\n          t += mySteps[key][i];\n        }\n      }\n    }\n    return false;\n  }\n\n  // Get fen of the position (fullMove set to 1)\n  toString() {\n    let fen = '';\n    let spaces = 0;\n    for (let i = 0; i < 64; i++) {\n      if (this.board[i] === null) spaces++;\n      else {\n        if (spaces > 0) {\n          fen += spaces;\n          spaces = 0;\n        }\n        fen += this.board[i];\n      }\n      if (i % 8 === 7) {\n        if (spaces > 0) {\n          fen += spaces;\n          spaces = 0;\n        }\n        if (i < 63) fen += '/';\n      }\n    }\n\n    fen += ' ';\n    if (this.turn === WHITE) fen += 'w';\n    else fen += 'b';\n\n    fen += ' ';\n    if (!this.wc[0] && !this.wc[1] && !this.bc[0] && !this.bc[1]) fen += '-';\n    else {\n      if (this.wc[1]) fen += 'K';\n      if (this.wc[0]) fen += 'Q';\n      if (this.bc[1]) fen += 'k';\n      if (this.bc[0]) fen += 'q';\n    }\n\n    fen += ' ';\n    if (this.ep !== -1) fen += squareToString(this.ep);\n    else fen += '-';\n\n    fen += ' ';\n    fen += this.halfMoveClock;\n\n    fen += ' ';\n    fen += 1; // fullMove\n\n    return fen;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/Position.js","/**\n * @module AI\n * The \"AI\", or computer mover.\n * @flow\n */\n\nimport Position, { A1, H8 } from './Position';\nimport { Cwf } from './tp'\nimport { PIECE } from './evaluation';\nimport { next } from './helpers';\nimport { PIECES } from './declarations';\n\nimport type { Move, Piece, History, Hash } from './declarations';\n\n// best moves for a position in reverse order\ntype Pv = [Move, Piece | void] | void;\n\n// Constants and types.\n\n// If value of position is > this, it means previous move was invalid\nconst MAX_SCORE = 15 * PIECE.Q; // with margin\n// How much to move alpha and beta in the mtd(f) until we have failed\n// both high and low\nconst SEARCH_MARGIN = 50;\n\n// fail low, high, hit exact (between alpha and beta) or invalid position\nconst L = 'L';\nconst E = 'E';\nconst H = 'H';\n\ntype Entry = {\n  pv: Pv, // moves previously beat alpha, from worst to best\n  score: number,\n  depth: number,\n  fail: 'L' | 'E' | 'H'\n};\n\nconst tp: Cwf<Entry> = new Cwf(1e7);\nconst boardTable: any = new Cwf(1e3); // table to find repeated positions\n\n// add methods to boardTable\nboardTable.push = function(hash: Hash) {\n  let count = this.get(hash); // if this position has been visited before\n  if (count !== undefined) this.add(hash, count + 1);\n  else this.add(hash, 1);\n}\nboardTable.pull = function(hash: Hash) {\n  let count = this.get(hash); // if this position has been visited before\n  if (count !== undefined && count > 0) this.add(hash, count - 1);\n}\n\n/* eslint-disable */\n// Data structure for storing killer moves (not pawn promotions)\nclass Killer {\n  origins: { [number]: { [number]: boolean } } = {};\n  constructor() {\n    return this;\n  }\n\n  add(move: Move) {\n    if (this.origins[move[0]]) this.origins[move[0]][move[1]] = true;\n    else {\n      this.origins[move[0]] = {};\n      this.origins[move[0]][move[1]] = true;\n    }\n  }\n\n  forEach(pos, callBack: (move: Move, tp: ?Piece) => boolean) {\n    for (const o in this.origins) {\n      for (const t in this.origins[o]) {\n        // TODO: Implement pseudo valid method on Position class and use\n        // here, then if it is pseudo-valid, call callback with the move\n      }\n    }\n  }\n}\n/* eslint-enable */\n\n// Logs\nlet tpHits = 0;\nlet searched = 0; // how many positions searched\n\nlet timeLimit;\nlet gotMove = false; // must have failed high or exact once to get a move\nconst timeout = () => Date.now() > timeLimit && gotMove;\n\n// Helper functions\n\n// Calls a callback function for all moves (as arguments) generated by genMoves,\n// including all 4 promotion moves for promotions. Runs through pv moves first.\n// if callback returns true, breaks. Returns true if there were any moves\n// generated, else false.\nfunction forMoves(pos: Position, pv: Pv,\n  callback: (move: Move, promo?: Piece, tp: ?Piece) => boolean): void {\n  if (pv) {\n    const move = pv[0];\n    let tp;\n    if (move[1] === pos.ep) {\n      if (pos.board[move[0]] === 'P') tp = pos.board[pos.ep + 8];\n      else if (pos.board[move[0]] === 'p') tp = pos.board[pos.ep - 8];\n      else tp = pos.board[move[1]];\n    } else tp = pos.board[move[1]];\n\n    if (callback(pv[0], pv[1], tp)) return; // move, promo\n  }\n\n  const moves = pos.genMoves();\n  let el = moves.next();\n  if (el.done) return; // if there are no valid moves\n\n  while (!el.done) {\n    const move = el.value;\n    let tp;\n    if (move[1] === pos.ep) {\n      if (pos.board[move[0]] === 'P') tp = pos.board[pos.ep + 8];\n      else tp = pos.board[pos.ep - 8];\n    } else tp = pos.board[move[1]];\n\n    if (pos.board[move[0]] === 'P' && move[1] <= H8) {\n      const promos = 'QNRB';\n      for (let i = 0; i < promos.length; i++) {\n        if (callback(move, (promos.charAt(i): any), tp)) return;\n      }\n    } else if (pos.board[move[0]] === 'p' && move[1] >= A1) {\n      const promos = 'qnrb';\n      for (let i = 0; i < promos.length; i++) {\n        if (callback(move, (promos.charAt(i): any), tp)) return;\n      }\n    } else if (callback(move, undefined, tp)) return;\n    el = moves.next();\n  }\n}\n\n// Check if a positino is stalemate. Assumes nobody is in check.\n// Promotion piece doesn't matter.\nfunction inStalemate(pos: Position) {\n  const moves = pos.genMoves();\n  let el = moves.next();\n  while (!el.done) {\n    // don't try castling, if the castle is valid, there is also a valid\n    // king move that don't gets you in check\n    // $FlowFixMe\n    if ('Kk'.includes(pos.board[el.value[0]]) && Math.abs(el.value[1] - el.value[0]) === 2) {\n      el = moves.next();\n      continue;\n    }\n\n    // if a move didn't get your king killed\n    if (!pos.move(el.value).inCheck(pos.turn)) {\n      return false; // not stalemate\n    }\n    el = moves.next();\n  }\n  return true; // stalemate\n}\n\nexport function getPieces(pos: Position) {\n  const pieces: Object = {};\n  PIECES.forEach((e) => { pieces[e] = 0 });\n  for (let i = 0; i < 64; i++) {\n    const p = pos.board[i];\n    if (p) pieces[p]++;\n  }\n  pieces.new = function(takenPiece?: Piece) {\n    const newPieces = Object.assign({}, this);\n    if (takenPiece) newPieces[takenPiece]--;\n    return newPieces;\n  }\n  pieces.endgame = function() {\n    if (this.Q > 0) {\n      if (this.R > 0 || this.B + this.N > 1) return false;\n    }\n    if (this.q > 0) {\n      if (this.r > 0 || this.b + this.n > 1) return false;\n    }\n    return true;\n  }\n  pieces.insufficientMaterial = function() {\n    return this.Q === 0 && this.q === 0 &&\n      this.P === 0 && this.p === 0 &&\n      this.R === 0 && this.r === 0 &&\n      (this.B === 0 || (this.B === 1 && this.N === 0)) &&\n      (this.b === 0 || (this.b === 1 && this.n === 0));\n  }\n\n  return pieces;\n}\n\n// Main algorithm\n// generic alpha-beta algorithm, doesn't assume mtd(f) search\nfunction alphaBeta(\n  pos: Position,\n  depth: number,\n  alpha: number,\n  beta: number,\n  pieces: Object,\n  root: boolean = false): number {\n  //await new Promise((resolve, reject) => { setTimeout(resolve, 1) })\n  searched++;\n  if (depth < 0) depth = 0;\n\n  // draw\n  if (pos.halfMoveClock >= 50) {\n    return 0;\n  }\n  if (boardTable.get(pos.boardHash) >= 3) {\n    return 0;\n  }\n\n  let stalemate = true; // true until proven otherwise\n  let pv: Pv; // default\n\n  // look up in tp\n  let entry: any = tp.get(pos.hash); // previous entry\n  if (entry) {\n    pv = entry.pv;\n    if (entry.depth >= depth) {\n      tpHits++;\n      switch (entry.fail) {\n        case L:\n          if (entry.score <= alpha) return alpha;\n          break;\n        case E:\n          return entry.score;\n        case H:\n          if (entry.score >= beta) return beta\n          break;\n        default: break;\n      }\n    }\n  }\n\n  // renew entry, use the previous pv as default\n  entry = (tp.add(pos.hash,\n    { pv: pv, score: alpha, depth: depth, fail: L }): Entry);\n\n  // Determine if we're in endgame.\n  // Endgame begins when any side that has a queen has one other minorpiece maximum.\n  // Disable delta pruning, change king pst and look for stalemates.\n  const endgame: boolean = pieces.endgame();\n  if (endgame && pieces.insufficientMaterial()) {\n    entry.score = 0;\n    entry.fail = E;\n    return 0;\n  }\n\n  // Callback helper\n  const handleMove = (move, promo?, score) => {\n    // if time's out\n    if (timeout()) return true;\n\n    // must be a beta cutoff since it's a null window search\n    if (score > alpha) {\n      entry.fail = H\n      stalemate = false; // my move was valid\n      entry.pv = [move, promo]; // new pv\n\n      if (score >= MAX_SCORE) alpha = MAX_SCORE;\n      else alpha = beta;\n\n      return true;\n    } else if (score > -MAX_SCORE) stalemate = false; // if my move was valid\n    return false;\n  };\n\n  // quiescence search ( 2 * PIECE.P (200 centipawns) is the margin)\n  if (depth <= 0) {\n    // null move beta cutoff\n    if (pos.score >= beta) {\n      // if no moves gets you out of check, this position will fail low\n      if (pos.inCheck()) {\n        stalemate = false;\n\n        // test all moves\n        forMoves(pos, pv, (move, promo, tp) => {\n          // tp here is target piece, not transposition table\n          const nextPos = pos.move(move, promo);\n          // if this move got rid of the check threat (if the move after\n          // can't take king)\n          if (!nextPos.inCheck(pos.turn)) {\n            boardTable.push(nextPos.boardHash);\n            const score = -alphaBeta(nextPos, 0, -beta, -alpha, pieces.new(tp))\n            boardTable.pull(nextPos.boardHash);\n            return handleMove(move, promo, score);\n          } else return false;\n        });\n      } else if (endgame && inStalemate(pos)) {\n        entry.score = 0;\n        entry.fail = E;\n        return 0;\n      } else {\n        entry.score = beta;\n        entry.fail = H;\n        return beta;\n      }\n    } else if (pos.score + PIECE.Q < alpha) {\n      if (pos.inCheck(next(pos.turn))) {\n        entry.fail = H;\n        entry.score = MAX_SCORE;\n        return MAX_SCORE; // king take or invalid castle\n      } else if (endgame && !pos.inCheck() && inStalemate(pos)) {\n        entry.score = 0;\n        entry.fail = E;\n        return 0;\n      }\n      // Might wanna try moves that check here later.\n\n      return alpha; // delta pruning\n    } else {\n      forMoves(pos, pv, (move, promo, tp) => {\n        // check if there was an invalid castle (saves time to do it here)\n        if (pos.kp !== -1 && Math.abs(pos.kp - move[1]) < 2) {\n          alpha = MAX_SCORE;\n          entry.fail = H;\n          return true;\n        }\n\n        // don't test silent moves\n        if (!pos.board[move[1]] && !(move[1] === pos.ep &&\n          'Pp'.includes((pos.board[move[0]]: any)))) return false;\n\n        const nextScore = pos.score + pos.value(move, promo);\n        // check if it's a king-take move, if it is we save a lot of time\n        if (nextScore >= MAX_SCORE) {\n          alpha = MAX_SCORE;\n          entry.fail = H;\n          return true;\n        }\n\n        // delta pruning\n        if ((pos.board[move[1]] || move[1] === pos.ep) && nextScore + 2 * PIECE.P >= alpha) {\n          // passes margin and not silent positon, search deeper\n          const nextPos = pos.move(move, promo, -nextScore);\n          boardTable.push(nextPos.boardHash);\n          const score = -alphaBeta(nextPos, 0, -beta, -alpha, pieces.new(tp))\n          boardTable.pull(nextPos.boardHash);\n          return handleMove(move, promo, score);\n        }\n        return false; // let forMoves() keep running\n      });\n      // if stalemate is still true, we know no valid moves were tested,\n      // but we don't know if there were no valid moves\n      // and therefore we should just return the score of this position\n      if (stalemate && alpha < beta) {\n        entry.fail = E;\n        entry.score = pos.score;\n        return pos.score;\n      }\n    }\n  } else {\n    // depth >= 1\n\n    // futiity pruning (use when searching deeper, not yet, need\n    // to watch out for king-take moves)\n    if (!root && depth === 1 && pos.score + PIECE.Q < alpha) {\n      if (pos.inCheck(next(pos.turn))) {\n        entry.score = MAX_SCORE;\n        entry.fail = H\n        return MAX_SCORE; // if you can take king\n      } else if (endgame && inStalemate(pos)) {\n        entry.score = 0;\n        entry.fail = E;\n        return 0;\n      }\n      return alpha;\n    }\n\n    // don't do nullmove at root or in endgame\n    // if in check, will not fail high\n    let score;\n    if (!root && !endgame) {\n      score = -alphaBeta(pos.nullMove(), depth - 3, -beta, -alpha, pieces.new())\n      if (score >= beta) {\n        entry.score = beta;\n        entry.fail = H;\n        return beta;\n      }\n    }\n\n    forMoves(pos, pv, (move, promo) => {\n      const nextScore = pos.score + pos.value(move, promo);\n      // check if it's a king-take move or if the previous move was an invalid\n      // castle, if it is we save a lot of time\n      if (nextScore >= MAX_SCORE) {\n        alpha = MAX_SCORE;\n        entry.fail = H;\n        return true;\n      }\n\n      if (depth === 1 && nextScore + 2 * PIECE.P < alpha) return false;\n\n      const nextPos = pos.move(move, promo, -nextScore);\n      boardTable.push(nextPos.boardHash);\n      const score = -alphaBeta(nextPos, depth - 1, -beta, -alpha, pieces.new())\n      boardTable.pull(nextPos.boardHash);\n      return handleMove(move, promo, score);\n    });\n  }\n\n  if (stalemate && endgame) {\n    if (!pos.inCheck() && inStalemate(pos)) {\n      entry.score = 0;\n      entry.fail = E;\n      return 0;\n    }\n  }\n\n  // could only have gotten a better score, we got interrupted\n  if (timeout()) {\n    entry.fail = H;\n  }\n\n  // alpha should have been changed to beta on beta cutoff\n  entry.score = alpha;\n  return alpha;\n}\n\n// return bound in case of timeout\nasync function mtdf(pos: Position, depth: number, guess: number): [number, number] {\n  const bound = { lower: -MAX_SCORE, upper: MAX_SCORE };\n  let f = guess;\n  let beta = f - 2 * SEARCH_MARGIN; // start lower to fail high earlier\n\n  const pieces = getPieces(pos);\n\n  do {\n    // find a window of size margin, then do a binary search in it\n    if (bound.lower !== -MAX_SCORE && bound.upper !== MAX_SCORE) {\n      if (bound.upper - bound.lower > 3) beta = Math.floor((bound.lower + bound.upper) / 2);\n      else beta = f + (f === bound.lower ? 1 : 0);\n    } else if (f === bound.lower) beta = f + SEARCH_MARGIN;\n    else if (f === bound.upper) beta = f - SEARCH_MARGIN;\n\n    f = alphaBeta(pos, depth, beta - 1, beta, pieces.new(), true);\n\n    if (f < beta) bound.upper = f;\n    else {\n      bound.lower = f;\n      gotMove = true;\n    }\n  } while (bound.lower <= bound.upper - 1 && !timeout()); // - 0.01 for floating point inaccuracy\n\n  return [bound.lower, bound.upper];\n}\n\n// Assumes there are valid moves.\n// @param time How many milliseconds to think. Min: 1000 Max. 60000\n// @returns [move, promo, stopReason]\nexport default async function move(pos: Position,\n  history: History,\n  time: number = 10000,\n  maxDepth: number = 100,\n  logs: Object,\n  betweenDepths?: () => Promise<any>): Promise<[Move, Piece | void, 'time' | 'depth']> {\n  let score = pos.score;\n  let bound;\n  //let entry: any;\n\n  if (maxDepth < 1) maxDepth = 1;\n\n  // set up position table (for three-repeat rule)\n  history.forEach(e => {\n    boardTable.push(new Position(e.fen).boardHash);\n  });\n  boardTable.push(pos.boardHash);\n\n  if (time < 1000) time = 1000;\n  if (time > 60000) time = 60000\n\n  // timeLimit and timeOut() is defined globally higher up\n  timeLimit = Date.now() + time; // run for 5 sec\n\n  // reset logging information\n  logs.searched = 0;\n  logs.tpHits = 0;\n\n  // iterative deepening, start at depth 1\n  let i = 1;\n  while (i <= maxDepth && !timeout()) {\n    logs.depth = i;\n    //if (betweenDepths) await betweenDepths();\n\n    // get the tp entry from the previous depth\n    //if (i > 1) entry = tp.get(pos.hash);\n\n    const moves = Array.from(pos.genMoves())\n    for (let j = 0; j < moves.length; j++){\n      const move = moves[j]\n      const nextPos = pos.move(move);\n      const entry = tp.get(nextPos.hash)\n\n      bound = await mtdf(nextPos, i - 1, entry && entry.score)\n      const newScore = -bound[1]\n      if (!score || score < newScore) score = newScore\n\n      //console.log(entry)\n      if (betweenDepths) {\n        if (entry) await betweenDepths(move, j, entry.score, entry.depth + 1)\n        else await betweenDepths(move, j, pos.score, 1)\n      }\n    }\n    bound = await mtdf(pos, i, score);\n    // lower bound and upper bound will always be the same unless interrupted\n    score = bound[0];\n    i++;\n    logs.searched = searched;\n    logs.tpHits = tpHits;\n  }\n  const stopReason = timeout() ? 'time' : 'depth';\n  gotMove = false; // reset this\n  searched = 0;\n  tpHits = 0;\n\n  const deepestEntry: any = tp.get(pos.hash); // should always be a hit\n  // if we didn't even finish depth 1, entry won't be defined\n  const entry = deepestEntry\n  /*if (!entry ||\n    ((bound: any)[0] > entry.score) || // means we got a better move\n    ((bound: any)[1] < entry.score) // means the move we have is worse than we thought\n  ) entry = deepestEntry;*/\n\n\n  // clear transposition table between depths\n  tp.clear();\n  boardTable.clear();\n  //const returnVal = entry.pv;\n  //returnVal.push(stopReason);\n  //return returnVal;\n  return entry\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/AI.js","/**\n * A javascript chess engine inspired by\n * [sunfish](https://github.com/thomasahle/sunfish) and\n * [chess.js](https://github.com/jhlywa/chess.js).\n * @module jackfish\n * @author Mattias Ahlsén (mattias.ahlsen@gmail.com)\n * @example\n * import Engine from 'jackfish';\n * const game = new Engine();\n *\n * @flow\n */\n\ntype Square = number | string;\n\nimport { PIECES, BLACK, WHITE } from './declarations';\nimport Position from './Position';\nimport { rank, parse, squareToString, equalBoards } from './helpers';\nimport aimove, { getPieces } from './AI';\n\nimport type { Board, Piece, Move, CR, History } from './declarations';\n\n/*\nThe board is represented as an array with indexes like this:\n8 |  0  1  2  3  4  5  6  7\n7 |  8  9  10 11 12 13 14 15\n6 |  16 17 18 19 20 21 22 23\n5 |  24 25 26 27 28 29 30 31\n4 |  32 33 34 35 36 37 38 39\n3 |  40 41 42 43 44 45 46 47\n2 |  48 49 50 51 52 53 54 55\n1 |  56 57 58 59 60 61 62 63\n  |_________________________\n     A  B  C  D  E  F  G  H\n\nPieces are represented as characters with uppercase letters for white pieces\nand lowercase for black pieces, as in FEN notation:\nPawn: 'P' and 'p'\nKnight: 'N' and 'n'\nBishop: 'B' and 'b'\nRook: 'R' and 'r'\nQueen: 'Q' and 'q'\nKing: 'K' and 'k'\n*/\n\n/**\n * Configuration object for the engine.\n * @name Options\n * @property {string?}   startPos     The FEN string of the starting position.\n * @property {Function?} betweenDepth Async function that returns a promise,\n *                                    that runs between every depth of the AI\n *                                    searches.\n * @property {number} searchTime      Time for the AI to search in seconds.\n * @example\n * const options = {\n *   startPos: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n     betweenDepths: ''\n * }\n */\nexport type Options = {\n  startPos?: string,\n  searchTime?: number,\n  betweenDepths?: () => Promise<any>,\n};\n\ntype Config = {\n  startPos: string,\n  searchTime: number,\n  betweenDepths?: () => Promise<any>,\n};\n\nconst defaultConfig: Config = {\n  startPos: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n  searchTime: 6,\n};\n\n/**\n * The chess engine, including game mechanics and\n * a configurable AI. (default export)\n * @example const game = new Engine();\n * @param options Configuration object.\n * @param {string}\n * [options.startPos='rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1']\n * @param {number}\n * [options.searchTime=4]\n * See {@link Options}.\n *\n * @return {Engine}\n */\nexport default class Engine {\n  config: Config = defaultConfig;\n  history: History = [];\n  position: Position;\n  fullMove: number;\n\n  aiInfo: {\n    depth: number,\n    searched: number,\n    tpHits: number,\n  } = ({\n    depth: 0,\n    searched: 0,\n    tpHits: 0,\n  }: any);\n\n  betweenDepths: () => Promise<any>;\n\n  constructor(options?: Options) {\n    if (options) this.configure(options);\n    this.setPos(this.config.startPos);\n  }\n\n  /**\n   * Configurate the engine (only changes passed properties).\n   * @example\n   * // set starting position to standard\n   * game.configure({ startPos: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1' });\n   * @param options   Same type of configuration object passed to\n   *                  constructor.\n   */\n  configure(options: Options): void {\n    for (const key in options) {\n      this.config[key] = options[key];\n    }\n  }\n\n  /**\n   * Get the current configuration, including all default values.\n   * @return The configuration object.\n   */\n  getConfig(): Config {\n    return this.config;\n  }\n\n  /**\n   * Changes to the new position and clears history array.\n   * @param fen The FEN string of the position to be set.\n   * @return True if the FEN string was valid enough and the position was\n   *         successfully changed.\n   */\n  setPos(fen: string): boolean {\n    const board: Board = [];\n    let turn;\n    let wc: CR = [false, false];\n    let bc: CR = [false, false];\n    let ep = -1; // default is none\n    let kp = -1;\n    let halfMoveClock;\n    let fullMove;\n\n    const subs = fen.trim().split(/ +/); // get substrings\n    if (subs.length !== 6) return false;\n\n    let pos = 0; // current board position (square)\n    let i = 0; // index of string\n    // The board array is indexed the same way as FEN notation.\n    while (i < subs[0].length) {\n      let c = subs[0].charAt(i); // currently parsed char\n      const num = parseInt(c);\n      if (Number.isInteger(num) && num > 0) {\n        if (num > 8 - pos % 8) return false;\n        for (let j = 0; j < num; j++) {\n          board[pos + j] = null;\n        }\n        pos += num;\n      } else if (PIECES.includes(c)) {\n        // Cast to piece when we know it is one.\n        c = ((c: any): Piece)\n        board[pos] = c;\n        pos++;\n      } else {\n        return false; // invalid FEN\n      }\n      i++;\n      if (pos >= 64) break; // should not be able to be bigger than 64\n      else if (pos % 8 === 0) {\n        if (subs[0].charAt(i) !== '/') return false;\n        i++;\n      }\n    }\n    if (fen.charAt(i) !== ' ') return false;\n\n    switch (subs[1]) {\n      case 'w': turn = WHITE; break;\n      case 'b': turn = BLACK; break;\n      default: return false;\n    }\n\n    if (subs[2] !== '-') {\n      if (subs[2].length > 4) return false;\n      const used = [];\n      for (let i = 0; i < subs[2].length; i++) {\n        const c = subs[2].charAt(i);\n        if (used.includes(c)) return false; // may only occur once\n        switch (c) {\n          case 'Q': wc[0] = true; break;\n          case 'K': wc[1] = true; break;\n          case 'q': bc[1] = true; break;\n          case 'k': bc[0] = true; break;\n          default: return false;\n        }\n        used.push(c);\n      }\n    }\n\n    if (subs[3] !== '-') {\n      ep = parse(subs[3]);\n      const r = rank(ep);\n      if (isNaN(ep)) return false;\n      if (r !== 3 && r !== 6) return false;\n    }\n\n    halfMoveClock = parseInt(subs[4]);\n    fullMove = parseInt(subs[5]);\n    if (!(Number.isInteger(halfMoveClock) && halfMoveClock >= 0)) return false;\n    if (!(Number.isInteger(fullMove) && fullMove > 0)) return false;\n\n    // if we've made it this far, we're golden\n    this.fullMove = fullMove;\n    this.position = new Position(board, turn, wc, bc, ep, kp, halfMoveClock);\n    this.history = [];\n    return true;\n  }\n\n  validFen(fen: string) {\n    const dummy = new this.constructor();\n    return dummy.setPos(fen);\n  }\n\n  /**\n   * Returns the FEN representation of the game.\n   * @return The FEN string.\n   */\n  fen(): string {\n    const pos = this.position;\n    const board = pos.board;\n    let fen = '';\n    let spaces = 0;\n    for (let i = 0; i < 64; i++) {\n      if (board[i] === null) spaces++;\n      else {\n        if (spaces > 0) {\n          fen += spaces;\n          spaces = 0;\n        }\n        fen += board[i];\n      }\n      if (i % 8 === 7) {\n        if (spaces > 0) {\n          fen += spaces;\n          spaces = 0;\n        }\n        if (i < 63) fen += '/';\n      }\n    }\n\n    fen += ' ';\n    if (pos.turn === WHITE) fen += 'w';\n    else fen += 'b';\n\n    fen += ' ';\n    if (!pos.wc[0] && !pos.wc[1] && !pos.bc[0] && !pos.bc[1]) fen += '-';\n    else {\n      if (pos.wc[1]) fen += 'K';\n      if (pos.wc[0]) fen += 'Q';\n      if (pos.bc[1]) fen += 'k';\n      if (pos.bc[0]) fen += 'q';\n    }\n\n    fen += ' ';\n    if (pos.ep !== -1) fen += squareToString(pos.ep);\n    else fen += '-';\n\n    fen += ' ';\n    fen += pos.halfMoveClock;\n\n    fen += ' ';\n    fen += this.fullMove;\n\n    return fen;\n  }\n\n  /**\n   * Moves from position o to position t, making sure it's a valid move.\n   * Positions can be on the form 0 for A8, 7 for H8, ..., 56 for A1,\n   * 63 for H1, or simply on the form 'a1', 'b7', etc...\n   * @param o Origin position.\n   * @param t Target position.\n   * @return True if it was a valid move.\n   */\n  move(o: Square, t: Square, promo?: Piece): boolean {\n    // parse() returns NaN for invalid position strings\n    o = (parse(o): number);\n    t = (parse(t): number);\n\n    // check that promotion piece is valid if there is one\n    if (promo) {\n      if (this.position.turn === WHITE) {\n        if (!'QNRB'.includes(promo)) return false;\n      } else if (!'qnrb'.includes(promo)) return false;\n    }\n\n    if (this.valid(o, t)) {\n      this.history.push({fen: this.fen(), move: [o, t]});\n      this.position = this.position.move([o, t], promo);\n      if (this.position.turn === WHITE) this.fullMove += 1;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Undoes the latest move if there is one.\n   * @return The move that was undone on the form [origin, target] or null if\n   * there were no previous moves.\n   */\n  undoMove(): Move | null {\n    const history = this.history; // save this, setPos() clears it\n    const last = history.pop();\n    if (last) {\n      this.setPos(last.fen);\n      this.history = history; // need to set this because setPos() clears it\n      return last.move;\n    }\n    return null;\n  }\n\n  /**\n   * Get winner if there is one.\n   */\n  winner(): 'white' | 'black' | 'draw' | null {\n    if (this.inCheckMate()) {\n      if (this.position.turn === WHITE) return 'black';\n      else return 'white';\n    }\n\n    if (this.fiftyMoves() || this.inThreefoldRepetition() ||\n      this.inStaleMate() || this.insuffMaterial()) return 'draw'\n\n    return null;\n  }\n\n  insuffMaterial() {\n    return getPieces(this.position).insufficientMaterial();\n  }\n\n  /** Returns true if in draw according to fifty move rule. */\n  fiftyMoves(): boolean {\n    return this.position.halfMoveClock >= 50;\n  }\n\n  /** Returns true if the current board position has ocurred 3 or more times. */\n  inThreefoldRepetition(): boolean {\n    let count = 1; // starts at 1 because current position is 1 occurence\n    for (let i = 0; i < this.history.length; i++) {\n      const game = new Engine();\n      game.setPos(this.history[i].fen);\n      if (equalBoards(game.position.board, this.position.board)) {\n        count++;\n        if (count === 3) return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if side to move is in checkmate.\n   */\n  inCheckMate(): boolean {\n    return this.moves().length === 0 && this.position.inCheck();\n  }\n\n  /**\n   * Check if in stalemate.\n   */\n  inStaleMate(): boolean {\n    return this.moves().length === 0 && !this.position.inCheck();\n  }\n\n  /** Returns an array of valid moves. Only returns one move for promotions. */\n  moves(): Array<Move> {\n    const moves = [];\n    const generator = this.position.genMoves(); // move generator\n    let el = generator.next();\n    while (!el.done) {\n      if (this.position.valid(el.value)) moves.push(el.value);\n      el = generator.next();\n    }\n    return moves;\n  }\n\n  /**\n   * Returns true if a move is valid.\n   */\n  valid(o: Square, t: Square): boolean {\n    o = parse(o);\n    t = parse(t);\n\n    return this.position.valid([o, t]);\n  }\n\n  /**\n   * Sets position to the starting position set in config.startingPos (default\n   * is normal starting position).\n   */\n  restart(): void {\n    this.setPos(this.config.startPos);\n  }\n\n  /**\n   * Let the AI make a move. If there are no valid moves, return null.\n   * @return The move that was made.\n   */\n  async aiMove(maxDepth, showMove) {\n    // This implies that there are valid moves to be made.\n    if (this.winner() !== null) return;\n\n    const entry = await aimove(this.position, this.history,\n      this.config.searchTime * 1000, maxDepth, this.aiInfo, this.config.betweenDepths);\n    const move = entry.pv\n    if (move) {\n      if (showMove) {\n        await showMove(entry)\n      }\n      this.move(move[0][0], move[0][1], move[1]);\n\n      return move;\n    } else throw new Error('The AI failed to make a move');\n  }\n\n  /**\n   * Returns whose turn it is.\n   * @return turn\n   */\n  turn(): 'white' | 'black' {\n    if (this.position.turn === WHITE) return 'white';\n    else return 'black';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/jackfish/index.js","<template>\n  <div>\n    <div class=\"content\">\n      <Promotion v-if=\"promotion\" :pos=\"promotion.pos\" :board=\"$refs.board\"\n        :color=\"promotion.color\" @done=\"handlePromotion\">\n      </Promotion>\n      <div class=\"board-container\" ref=\"boardContainer\">\n        <div id=\"board\" ref=\"board\" @click=\"cancel\" touch-action=\"none\">\n        </div>\n        <canvas\n          v-if=\"thinking || winningEntry\" ref=\"canvas\" id=\"canvas\"\n          :height=\"$refs.boardContainer.offsetHeight\"\n          :width=\"$refs.boardContainer.offsetWidth\"\n        >\n        </canvas>\n        <div v-if=\"(thinking && $refs.canvas)\" class=\"overlay\">\n          <p class=\"thinking-text\" v-if=\"!winningEntry\">Thinking...</p>\n          <div v-if=\"!winningEntry\" class=\"think-bar\">\n            <div\n              :style=\"{ width: thinkProgress() + '%' }\"\n              class=\"think-bar-fill\"\n            ></div>\n          </div>\n          <p\n            class=\"move-text winning-move-text\"\n            v-if=\"winningEntry\"\n            :style=\"{\n              left: textX(winningEntry.pv[0]) + 'px',\n              top: textY(winningEntry.pv[0]) + 'px'\n            }\"\n          >\n            Winning move<br>Score: {{winningEntry.score}}\n          </p>\n          <p\n            v-else\n            class=\"move-text\"\n            v-for=\"(move, index) in moves\"\n            :key=\"index\"\n            :style=\"{\n              left: textX(move.move) + 'px',\n              top: textY(move.move) + 'px'\n            }\"\n          >\n            {{move.score}}\n          </p>\n        </div>\n      </div>\n\n\n      <div class=\"info\">\n        <h1>Jackfish</h1>\n        <h2>A chess engine in javascript.</h2>\n        <div class=\"game-status col-sm-6\">\n          <h3 v-if=\"winner === 'white'\">The winner is\n            <span class=\"white\">white</span></h3>\n          <h3 v-else-if=\"winner === 'black'\">The winner is\n            <span class=\"black\">black</span></h3>\n          <h3 v-else-if=\"winner === 'draw'\">It's a draw</h3>\n          <h3 v-else :style=\"{ visibility: 'hidden' }\">\n            Game is still running.\n          </h3>\n\n          <button type=\"button\" class=\"btn btn-light\" @click=\"undoMove\">\n            Undo move\n          </button>\n          <button type=\"button\" class=\"btn btn-light\" @click=\"restart\">\n            Restart\n          </button>\n\n          <!--\n          <div class=\"mt-3\">\n            <h6>AI search time (s)</h6>\n            <div class=\"mb-2\"><input v-model=\"game.config.searchTime\"></div>\n            <button type=\"button\" class=\"btn btn-outline-success\" @click=\"setTime(2)\">Easy</button>\n            <button type=\"button\" class=\"btn btn-outline-warning\" @click=\"setTime(4)\">Medium</button>\n            <button type=\"button\" class=\"btn btn-outline-danger\"  @click=\"setTime(6)\">Hard</button>\n          </div>\n          -->\n\n          <!--\n          <div class=\"mt-3\">\n            <h6>Fen of starting position.</h6>\n            <div><input v-model=\"startPos\" class=\"fen\"></div>\n            <button class=\"btn btn-dark\" @click=\"setStartPos\">Set position</button>\n            <button class=\"btn btn-dark\" @click=\"resetStartPos\">Reset</button>\n            <p v-if=\"invalidStartPos\" class=\"text-danger\">Invalid FEN string</p>\n          </div>\n          -->\n\n          <!--\n          <div class=\"mt-3\">\n            <h6>\n              <a href=\"https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation\">\n                FEN\n              </a> of board\n            </h6>\n            <div><input v-model=\"fen\" class=\"fen\"></div>\n            <button class=\"btn btn-dark\" @click=\"setPos\">Set position</button>\n            <p v-if=\"invalidFen\" class=\"text-danger\">Invalid FEN string</p>\n          </div>\n          -->\n\n          <div class=\"mt-3\">\n            <p><strong>Depth searched:</strong> {{aiInfo.depth}}</p>\n            <p><strong>Nodes searched:</strong> {{aiInfo.searched}}</p>\n            <!--<p><strong>Hits in transposition table:</strong> {{aiInfo.tpHits}}</p>-->\n          </div>\n        </div>\n\n        <div class=\"col-sm-6 links\">\n          <h3>About</h3>\n          <p>\n            This is a chess engine I've built in javascript.\n            All rules apply: insufficient material, fifty-move rule, threefold\n            repetition etc. More info below.\n          </p>\n          <a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://github.com/mattiasahlsen/jackfish/\" role=\"button\">\n            Github repo\n          </a>\n        </div>\n\n    <div class=\"about mt-4 mb-4\">\n      <h4 class=\"mt-3\">Features</h4>\n      <ul>\n        <li>\n          <a href=\"https://chessprogramming.wikispaces.com/Simplified+evaluation+function\">\n            Piece-square table evaluation\n          </a>\n        </li>\n        <li class=\"\">\n          <a href=\"https://chessprogramming.wikispaces.com/MTD%28f%29\">\n            MTD(f)\n          </a>\n        </li>\n        <li class=\"\">\n          <a href=\"https://chessprogramming.wikispaces.com/Alpha-Beta\">\n            Alpha-beta\n          </a>\n        </li>\n        <li class=\"\">\n          <a href=\"https://chessprogramming.wikispaces.com/Iterative+Deepening\">\n            Iterative deepening\n          </a>\n        </li>\n        <li class=\"\">\n          <a href=\"https://chessprogramming.wikispaces.com/Transposition%20Table#KeyCollisions\">\n            Transposition table\n          </a>\n        </li>\n        <li class=\"\">\n          <a href=\"https://chessprogramming.wikispaces.com/Quiescence+Search\">\n            Quiescence search\n          </a>\n        <li class=\"\">\n          <a href=\"https://chessprogramming.wikispaces.com/delta+pruning\">\n            Delta pruning\n          </a>\n        </li>\n      </ul>\n\n      <!--\n      <h4 class=\"mt-3\">To be implemented</h4>\n      <ul class=\"\">\n        <li class=\"\">\n          <a href=\"https://chessprogramming.wikispaces.com/Killer+Move\">\n            Killer heuristic\n          </a>\n        </li>\n        <li class=\"\">\n          <a href=\"https://chessprogramming.wikispaces.com/Pawn%20Structure\">\n            Pawn structure evaluation\n          </a>\n        </li>\n      </ul>\n      -->\n\n      <h4 class=\"mt-3\">Credits to</h4>\n      <div>\n        <a href=\"https://chessprogramming.wikispaces.com/\">https://chessprogramming.wikispaces.com/</a>\n      </div>\n      <div>\n        <a href=\"https://github.com/thomasahle/sunfish\">https://github.com/thomasahle/sunfish</a>\n      </div>\n      <div>\n      </div>\n    </div>\n\n    <p class=\"created-by\">Created by Mattias Ahlsén</p>\n\n    </div>\n\n      </div>\n\n  </div>\n</template>\n\n<script>\nimport Promotion from './Promotion';\n\n// Images for the chess board are copied to /static/img\nimport Chessboard from 'chessboardjs';\nimport 'chessboardjs/www/css/chessboard.css';\n\nimport Engine from '@/jackfish';\nimport { WHITE, BLACK } from '@/jackfish/declarations';\nimport { rank, parse } from '@/jackfish/helpers';\n\nconst game = new Engine();\n\nexport default {\n  name: 'Home',\n  components: {\n    Promotion,\n  },\n\n  data () {\n    return {\n      game: game,\n      promotion: null,\n      winner: game.winner(),\n      aiInfo: game.aiInfo,\n\n      fen: game.fen(),\n      startPos: game.config.startPos,\n      board: null,\n\n      thinking: false,\n      startedThinking: null,\n      winningEntry: null,\n    };\n  },\n  computed: {\n    invalidFen() {\n      return !game.validFen(this.fen);\n    },\n    invalidStartPos() {\n      return !game.validFen(this.startPos);\n    },\n  },\n  watch: {\n    'game.position.board': function() {\n      this.board.position(this.game.fen(), true);\n      this.winner = this.game.winner();\n      this.fen = this.game.fen();\n    },\n    'game.position.turn': function() {\n      if (this.game.turn() === 'black' && this.game.winner() === null) {\n        setTimeout(() => {\n          this.thinking = true\n          this.startedThinking = new Date()\n          this.moves = Array.from(this.game.position.genMoves())\n            .map(move => ({ move, }))\n          this.game.aiMove(100, async entry => {\n            this.winningEntry = entry\n            const move = entry.pv\n            const ctx = this.$refs.canvas.getContext('2d')\n            //ctx.clearRect(0, 0, this.$refs.canvas.width, this.$refs.canvas.height)\n            //ctx.stroke()\n            this.$refs.canvas.width = this.$refs.canvas.width\n\n            ctx.lineWidth = 6\n            ctx.strokeStyle = '#00ff99'\n            ctx.shadowOffsetX = 2\n            ctx.shadowOffsetX = 2\n            ctx.shadowBlur = 5\n            ctx.shadowColor = 'rgba(0, 0, 0, 0.02)'\n            this.drawLine(ctx, move[0][0], move[0][1])\n\n            await new Promise((resolve, reject) => setTimeout(resolve, 1000))\n            this.winningEntry = null\n          }).finally(() => {\n            this.thinking = false\n            this.startedThinking = null\n          })\n        }, 100);\n      }\n    },\n\n    'game.aiInfo': {\n      handler: function(val) { this.aiInfo = val; }, deep: true\n    }\n  },\n  mounted () {\n    this.game.configure({\n      betweenDepths: async (move, index, score, depth) => {\n        const ctx = this.$refs.canvas.getContext('2d')\n        ctx.lineWidth = 4\n        ctx.strokeStyle = '#33cccc'\n        ctx.shadowOffsetX = 2\n        ctx.shadowOffsetX = 2\n        ctx.shadowBlur = 5\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.02)'\n\n        this.drawLine(ctx, move[0], move[1])\n\n        this.moves[index].score = score\n        this.moves[index].depth = depth\n\n        this.$forceUpdate()\n        await new Promise((resolve, reject) => setTimeout(resolve, 10))\n      },\n    })\n\n    this.onDragStart = (src, piece) => {\n      return (piece.charAt(0) === 'w' ? WHITE : BLACK) ===\n        this.game.position.turn && this.winner === null;\n    }\n\n    this.onDrop = (src, target, piece) => {\n      if (!this.game.valid(src, target)) return 'snapback';\n\n      // pawn promotion\n      const r = rank(parse(target));\n      if (piece.charAt(1) === 'P' && (r === 8 || r === 1)) {\n        const color = (piece.charAt(0) === 'w') ? WHITE : BLACK;\n        // this refers to the vue object\n        this.promotion = {\n          pos: parse(target),\n          color,\n          src,\n          target,\n        };\n        return;\n      }\n\n      this.game.move(src, target); // we already know it's valid\n    }\n    this.createBoard()\n    window.onresize = this.createBoard\n\n    this.$refs.board.ontouchmove = (event) => event.preventDefault()\n  },\n  methods: {\n    drawLine(ctx, from, to) {\n      const fromX = this.getX(from)\n      const fromY = this.getY(from)\n      ctx.moveTo(fromX, fromY)\n\n      const toX = this.getX(to)\n      const toY = this.getY(to)\n      ctx.lineTo(toX, toY)\n      ctx.stroke()\n    },\n    canvasWidth() {\n      const canvas = this.$refs.canvas\n      const width = canvas.offsetWidth\n      return width\n    },\n    canvasHeight() {\n      const canvas = this.$refs.canvas\n      const height = canvas.offsetHeight\n      return height\n    },\n    textX(move) {\n      return (this.getX(move[0]) + this.getX(move[1])) / 2\n    },\n    textY(move) {\n      return (this.getY(move[0]) + this.getY(move[1])) / 2\n    },\n    getX(pos) {\n      return (pos % 8 + 1 / 2) / 8 * this.canvasWidth()\n    },\n    getY(pos) {\n      return (Math.floor(pos / 8) + 1 / 2) / 8 * this.canvasHeight()\n    },\n    thinkProgress() {\n      const progress = (new Date().getTime() - this.startedThinking.getTime()) / (this.game.config.searchTime * 1000)\n      return progress * 100 // to percent\n    },\n    createBoard() {\n      //console.log($(window).width() * 0.9)\n      const windowHeight = $(window).height()\n      const windowWidth = $(window).width()\n      this.$refs.board.style.width = this.$refs.board.style.height =\n        Math.min(windowWidth, windowHeight) + 'px'\n\n      //console.log(this.game)\n      this.board = Chessboard('board', {\n        position: this.game.fen(),\n        draggable: true,\n        onDrop: this.onDrop,\n        onDragStart: this.onDragStart,\n      });\n    },\n    destroyBoard() {\n      if (this.board) this.board.destroy()\n      this.board = null\n    },\n    handlePromotion(piece) {\n      this.game.move(\n        this.promotion.src,\n        this.promotion.target,\n        piece\n      );\n      this.promotion = null;\n    },\n    cancel() {\n      // cancel pawn promotion primarily\n      this.promotion = null;\n      this.board.position(this.game.fen(), false);\n    },\n    undoMove() {\n      this.game.undoMove();\n      if (game.position.turn === BLACK) this.game.undoMove();\n    },\n    restart() {\n      console.log('restart')\n      this.game.restart();\n    },\n\n    setPos() {\n      if (this.game.setPos(this.fen)) this.fen = this.game.fen();\n    },\n    setStartPos() {\n      if (game.validFen(this.startPos)) {\n        this.game.configure({\n          startPos: this.startPos\n        });\n      }\n    },\n    resetStartPos() {\n      this.game.configure({\n        startPos: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n      });\n      this.startPos = this.game.config.startPos;\n    },\n    setTime(time) {\n      this.game.configure({\n        searchTime: time,\n      });\n    }\n  },\n}\n</script>\n\n<style scoped>\n.content {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  flex-wrap: wrap;\n}\n#board {\n  touch-action: none;\n  margin-left: auto;\n  margin-right: auto;\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n.info {\n  width: 500px;\n}\n.game-status {\n  margin-left: auto;\n  margin-right: auto;\n}\n.game-status h3 {\n  color: #737373;\n}\n.white {\n  color: #a6a6a6;\n}\n.black {\n  color: #333333;\n}\n\n.fen {\n  width: 90%;\n  margin-bottom: 10px;\n}\n\n.links {\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.about {\n  padding: 5px;\n  width: 100%;\n  background-color:\n}\n.created-by {\n  display: inline-block;\n  margin-right: 10px;\n}\n\nh1, h2 {\n  margin: 0;\n}\n\n</style>\n<style>\n/* custom board colors */\n.black-3c85d {\n  background-color: #002233 !important;\n}\n.white-1e1d7 {\n  background-color:#f2f2f2 !important;\n}\n.piece-417db {\n  cursor: pointer;\n}\n.my-img {\n  width: 200px;\n  height: 200px;\n}\n\n/* cool thinking animations */\n.board-container {\n  position: relative;\n  margin: 2px;\n}\n.overlay {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  z-index: 1000;\n\n  background-color: rgba(0, 34, 51, 0.6)\n  /*border: 2px solid #00ffff;*/\n}\n.think-bar {\n  height: 20px;\n  width: 50%;\n  background-color: #595959;\n  border-radius: 5px;\n  -webkit-box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n  -moz-box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n  box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n  position: relative;\n  overflow: hidden;\n}\n.think-bar-fill {\n  height: 100%;\n  background-color: #0086b3;\n  transition: width 0.5s linear;\n}\n#canvas {\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n}\n.move-text {\n  position: absolute;\n}\n.winning-move-text {\n  font-size: 24px;\n}\n.thinking-text {\n  margin-bottom: 5px;\n  margin-top: 0;\n  margin-left: 0;\n  margin-right: 0;\n  padding: 0;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Home.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"content\"},[(_vm.promotion)?_c('Promotion',{attrs:{\"pos\":_vm.promotion.pos,\"board\":_vm.$refs.board,\"color\":_vm.promotion.color},on:{\"done\":_vm.handlePromotion}}):_vm._e(),_vm._v(\" \"),_c('div',{ref:\"boardContainer\",staticClass:\"board-container\"},[_c('div',{ref:\"board\",attrs:{\"id\":\"board\",\"touch-action\":\"none\"},on:{\"click\":_vm.cancel}}),_vm._v(\" \"),(_vm.thinking || _vm.winningEntry)?_c('canvas',{ref:\"canvas\",attrs:{\"id\":\"canvas\",\"height\":_vm.$refs.boardContainer.offsetHeight,\"width\":_vm.$refs.boardContainer.offsetWidth}}):_vm._e(),_vm._v(\" \"),((_vm.thinking && _vm.$refs.canvas))?_c('div',{staticClass:\"overlay\"},[(!_vm.winningEntry)?_c('p',{staticClass:\"thinking-text\"},[_vm._v(\"Thinking...\")]):_vm._e(),_vm._v(\" \"),(!_vm.winningEntry)?_c('div',{staticClass:\"think-bar\"},[_c('div',{staticClass:\"think-bar-fill\",style:({ width: _vm.thinkProgress() + '%' })})]):_vm._e(),_vm._v(\" \"),(_vm.winningEntry)?_c('p',{staticClass:\"move-text winning-move-text\",style:({\n            left: _vm.textX(_vm.winningEntry.pv[0]) + 'px',\n            top: _vm.textY(_vm.winningEntry.pv[0]) + 'px'\n          })},[_vm._v(\"\\n          Winning move\"),_c('br'),_vm._v(\"Score: \"+_vm._s(_vm.winningEntry.score)+\"\\n        \")]):_vm._l((_vm.moves),function(move,index){return _c('p',{key:index,staticClass:\"move-text\",style:({\n            left: _vm.textX(move.move) + 'px',\n            top: _vm.textY(move.move) + 'px'\n          })},[_vm._v(\"\\n          \"+_vm._s(move.score)+\"\\n        \")])})],2):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"info\"},[_c('h1',[_vm._v(\"Jackfish\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"A chess engine in javascript.\")]),_vm._v(\" \"),_c('div',{staticClass:\"game-status col-sm-6\"},[(_vm.winner === 'white')?_c('h3',[_vm._v(\"The winner is\\n          \"),_c('span',{staticClass:\"white\"},[_vm._v(\"white\")])]):(_vm.winner === 'black')?_c('h3',[_vm._v(\"The winner is\\n          \"),_c('span',{staticClass:\"black\"},[_vm._v(\"black\")])]):(_vm.winner === 'draw')?_c('h3',[_vm._v(\"It's a draw\")]):_c('h3',{style:({ visibility: 'hidden' })},[_vm._v(\"\\n          Game is still running.\\n        \")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-light\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.undoMove}},[_vm._v(\"\\n          Undo move\\n        \")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-light\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.restart}},[_vm._v(\"\\n          Restart\\n        \")]),_vm._v(\" \"),_c('div',{staticClass:\"mt-3\"},[_c('p',[_c('strong',[_vm._v(\"Depth searched:\")]),_vm._v(\" \"+_vm._s(_vm.aiInfo.depth))]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"Nodes searched:\")]),_vm._v(\" \"+_vm._s(_vm.aiInfo.searched))])])]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('p',{staticClass:\"created-by\"},[_vm._v(\"Created by Mattias Ahlsén\")])])],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-sm-6 links\"},[_c('h3',[_vm._v(\"About\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n          This is a chess engine I've built in javascript.\\n          All rules apply: insufficient material, fifty-move rule, threefold\\n          repetition etc. More info below.\\n        \")]),_vm._v(\" \"),_c('a',{staticClass:\"btn btn-primary btn-lg\",attrs:{\"target\":\"_blank\",\"href\":\"https://github.com/mattiasahlsen/jackfish/\",\"role\":\"button\"}},[_vm._v(\"\\n          Github repo\\n        \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"about mt-4 mb-4\"},[_c('h4',{staticClass:\"mt-3\"},[_vm._v(\"Features\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/Simplified+evaluation+function\"}},[_vm._v(\"\\n          Piece-square table evaluation\\n        \")])]),_vm._v(\" \"),_c('li',{},[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/MTD%28f%29\"}},[_vm._v(\"\\n          MTD(f)\\n        \")])]),_vm._v(\" \"),_c('li',{},[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/Alpha-Beta\"}},[_vm._v(\"\\n          Alpha-beta\\n        \")])]),_vm._v(\" \"),_c('li',{},[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/Iterative+Deepening\"}},[_vm._v(\"\\n          Iterative deepening\\n        \")])]),_vm._v(\" \"),_c('li',{},[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/Transposition%20Table#KeyCollisions\"}},[_vm._v(\"\\n          Transposition table\\n        \")])]),_vm._v(\" \"),_c('li',{},[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/Quiescence+Search\"}},[_vm._v(\"\\n          Quiescence search\\n        \")])]),_c('li',{},[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/delta+pruning\"}},[_vm._v(\"\\n          Delta pruning\\n        \")])])]),_vm._v(\" \"),_c('h4',{staticClass:\"mt-3\"},[_vm._v(\"Credits to\")]),_vm._v(\" \"),_c('div',[_c('a',{attrs:{\"href\":\"https://chessprogramming.wikispaces.com/\"}},[_vm._v(\"https://chessprogramming.wikispaces.com/\")])]),_vm._v(\" \"),_c('div',[_c('a',{attrs:{\"href\":\"https://github.com/thomasahle/sunfish\"}},[_vm._v(\"https://github.com/thomasahle/sunfish\")])]),_vm._v(\" \"),_c('div')])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-462c73c8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Home.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-462c73c8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Home.vue\")\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-462c73c8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=1!./Home.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-462c73c8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Home.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-462c73c8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Home.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from '@/components/Home'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'Home',\n      component: Home\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\n\nimport VueWorker from 'vue-worker'\nVue.use(VueWorker)\n\nimport $ from 'jquery';\nwindow.$ = window.jquery = $;\n\n// this might require the jquery variable to be available\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","var map = {\n\t\"./bB.png\": [\n\t\t\"z18c\",\n\t\t11\n\t],\n\t\"./bK.png\": [\n\t\t\"dLpT\",\n\t\t10\n\t],\n\t\"./bN.png\": [\n\t\t\"KRZJ\",\n\t\t9\n\t],\n\t\"./bP.png\": [\n\t\t\"9AiN\",\n\t\t8\n\t],\n\t\"./bQ.png\": [\n\t\t\"+a6Z\",\n\t\t7\n\t],\n\t\"./bR.png\": [\n\t\t\"fFy0\",\n\t\t6\n\t],\n\t\"./wB.png\": [\n\t\t\"xofh\",\n\t\t5\n\t],\n\t\"./wK.png\": [\n\t\t\"zrxd\",\n\t\t4\n\t],\n\t\"./wN.png\": [\n\t\t\"Zz9q\",\n\t\t3\n\t],\n\t\"./wP.png\": [\n\t\t\"gMX9\",\n\t\t2\n\t],\n\t\"./wQ.png\": [\n\t\t\"80Ug\",\n\t\t1\n\t],\n\t\"./wR.png\": [\n\t\t\"rP+x\",\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"TFeN\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/chesspieces/wikipedia lazy ^\\.\\/.*\\.png$\n// module id = TFeN\n// module chunks = 13"],"sourceRoot":""}